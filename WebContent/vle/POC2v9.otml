<?xml version="1.0" encoding="UTF-8"?>
<otrunk id="33754150-b594-11d9-9669-0800200c9a66">
  <imports>
    <import class="org.concord.otrunk.OTSystem" />
    <import class="org.concord.otrunk.view.OTViewEntry" />
    <import class="org.concord.otrunk.view.OTViewBundle" />
    <import class="org.concord.otrunk.OTInclude" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasProject" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasActivity" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasStep" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTDisplayPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTEvidence" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTHelloWorld" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTOutsideLink" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTNote" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTStudentAssessment" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTSelfAssessment" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTChallengeQuestion" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTGenericOTrunkStep" />
    <import class="org.concord.graph.util.state.OTDrawingTool" />
    <import class="org.concord.otrunk.view.OTViewMode" />
    <import class="org.concord.data.state.OTDataStore" />
    <import class="org.concord.otrunk.graph.OTDataCollectorViewConfig" />
    <import class="org.concord.data.state.OTDataChannelDescription" />
    <import class="org.concord.data.state.OTDataField" />
    <import class="org.concord.data.state.OTWaveGenerator" />
    <import class="org.concord.data.state.OTMultiWaveGenerator" />
    <import class="org.concord.data.state.OTWave" />
    <import class="org.concord.datagraph.state.OTDataGraph" />
    <import class="org.concord.datagraph.state.OTDataAxis" />
    <import class="org.concord.datagraph.state.OTDataGraphable" />
    <import class="org.concord.datagraph.state.OTDataCollector" />
    <import class="org.concord.datagraph.state.OTMultiDataGraph" />
    <import class="org.concord.datagraph.state.OTDataPointLabel" />
    <import class="org.concord.datagraph.state.OTDataPointRuler" />
    <import class="org.concord.graph.util.state.OTDrawingTool" />
    <import class="org.concord.graph.util.state.OTDrawingStamp" />
    <import class="org.concord.graph.util.state.OTDrawingImageIcon" />
    <import class="org.concord.graph.util.state.OTDrawingShape" />
    <import class="org.concord.graph.util.state.OTPointTextLabel" />
    <import class="org.concord.otrunk.util.OTSharingBundle" />
    <import class="org.concord.otrunk.view.document.OTCompoundDoc" />
    <import class="org.concord.otrunk.view.document.OTDocumentViewConfig" />
    <import class="org.concord.otrunk.view.OTObjectEditViewConfig" />
    <import class="org.concord.data.state.OTDataStore" />
    <import class="org.concord.data.state.OTDataChannelDescription" />
    <import class="org.concord.data.state.OTDataField" />
    <import class="org.concord.data.state.OTDataTable" />
    <import class="org.concord.datagraph.state.OTDataGraph" />
    <import class="org.concord.datagraph.state.OTDataAxis" />
    <import class="org.concord.datagraph.state.OTDataGraphable" />
    <import class="org.concord.datagraph.state.OTDataCollector" />
    <import class="org.concord.datagraph.state.OTMultiDataGraph" />
    <import class="org.concord.datagraph.state.OTPluginView" />
    <import class="org.concord.datagraph.state.OTDataBarGraphable" />
    <import class="org.concord.framework.otrunk.view.OTFrame" />
    <import class="org.concord.graph.util.state.OTDrawingTool" />
    <import class="org.concord.graph.util.state.OTDrawingStamp" />
    <import class="org.concord.graph.util.state.OTDrawingImageIcon" />
    <import class="org.concord.graph.util.state.OTDrawingShape" />
    <import class="org.concord.graph.util.state.OTDrawingTool2" />
    <import class="org.concord.graph.util.state.OTPointTextLabel" />
    <import class="org.concord.multimedia.state.OTSoundDataCollector" />
    <import class="org.concord.multimedia.state.OTSoundDataProducer" />
    <import class="org.concord.otrunk.OTInclude" />
    <import class="org.concord.otrunk.OTSystem" />
    <import class="org.concord.otrunk.browser.mozswing.OTMozSwing" />
    <import class="org.concord.otrunk.graph.OTDataCollectorViewConfig" />
    <import class="org.concord.otrunk.overlay.OTOverlay" />
    <import class="org.concord.otrunk.script.ui.OTScriptObject" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariable" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableComponent" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableView" />
    <import class="org.concord.otrunk.script.js.OTJavascript" />
    <import class="org.concord.otrunk.script.OTScriptEngineBundle" />
    <import class="org.concord.otrunk.script.OTScriptEngineEntry" />
    <import class="org.concord.otrunk.ui.OTButton" />
    <import class="org.concord.otrunk.ui.OTCardContainer" />
    <import class="org.concord.otrunk.ui.OTChoice" />
    <import class="org.concord.otrunk.ui.OTChoiceMultiple" />
    <import class="org.concord.otrunk.ui.OTImage" />
    <import class="org.concord.otrunk.ui.OTModeSwitcher" />
    <import class="org.concord.otrunk.ui.OTSoundPlayer" />
    <import class="org.concord.otrunk.ui.OTText" />
    <import class="org.concord.otrunk.ui.swing.OTChoiceViewConfig" />
    <import class="org.concord.otrunk.view.OTFolderObject" />
    <import class="org.concord.otrunk.view.OTObjectEditViewConfig" />
    <import class="org.concord.otrunk.view.OTViewChild" />
    <import class="org.concord.otrunk.view.OTViewEntry" />
    <import class="org.concord.otrunk.view.OTViewBundle" />
    <import class="org.concord.otrunk.view.OTViewMode" />
    <import class="org.concord.otrunk.view.document.OTCompoundDoc" />
    <import class="org.concord.otrunk.view.document.OTCssText" />
    <import class="org.concord.otrunk.view.document.edit.OTDocumentEditViewConfig" />
    <import class="org.concord.otrunk.view.prototype.OTPrototypeViewEntry" />
    <import class="org.concord.otrunk.view.prototype.OTPrototypeEventController" />
    <import class="org.concord.otrunk.view.prototype.OTPrototypeMapEntry" />
    <import class="org.concord.otrunkmw.OTModelerPage" />
    <import class="org.concord.otrunknl4.OTNLogoModel" />
    <import class="org.concord.otrunkcck.OTCCKModel" />
    <import class="org.concord.otrunkphet.balloons.OTPhetBalloonsModel" />
    <import class="org.concord.sensor.state.OTDeviceConfig" />
    <import class="org.concord.sensor.state.OTExperimentRequest" />
    <import class="org.concord.sensor.state.OTInterfaceManager" />
    <import class="org.concord.sensor.state.OTSensorDataProxy" />
    <import class="org.concord.sensor.state.OTSensorRequest" />
    <import class="org.concord.sensor.state.OTZeroSensor" />
    <import class="org.concord.otrunk.view.OTViewService" />
    <import class="org.concord.otrunk.view.document.OTTextObject" />
    <import class="org.concord.otrunk.ui.OTChoiceWithFeedback" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasHint" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTPedagogicaStep" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbum" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButton" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButtonView" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshot" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotAlbum" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotChooser" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalStep" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTVideoPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTBrainstorm" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTIntroPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTReadingPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTQuiz" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTExamplePage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTSummaryPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTCartoonPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTSimulationPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTQuestionAnswer" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTTryitPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTHomeworkPage" />
  </imports>
  <objects>
    <OTSystem>
      <includes>
        <OTInclude href="http://tels-group.soe.berkeley.edu/aperritano/predefined-sensor-graphs.otml" />
      </includes>
      <bundles>
        <OTViewBundle>
          <viewEntries>
            <OTViewEntry objectClass="org.telscenter.pas.otrunk.skeleton.OTPasProject" viewClass="org.telscenter.pas.otrunk.skeleton.OTPasProjectView" />
            <OTViewEntry local_id="sound-grapher-view" viewClass="org.concord.multimedia.state.ui.OTSoundDataCollectorView" objectClass="org.concord.multimedia.state.OTSoundDataCollector" />
            <OTViewEntry local_id="mw-view" objectClass="org.concord.otrunkmw.OTModelerPage" viewClass="org.concord.otrunkmw.OTModelerPageView" />
            <OTViewEntry objectClass="org.concord.otrunk.OTIncludeRootObject" viewClass="org.concord.otrunk.OTIncludeRootObjectView" />
            <OTViewEntry local_id="moz-swing-view" objectClass="org.concord.otrunk.browser.mozswing.OTMozSwing" viewClass="org.concord.otrunk.browser.mozswing.OTMozSwingView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTModeSwitcher" viewClass="org.concord.otrunk.ui.swing.OTModeSwitcherView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTImage" viewClass="org.concord.otrunk.ui.swing.OTImageView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTModeSwitcher" viewClass="org.concord.otrunk.ui.swing.OTModeSwitcherView" />
            <OTViewEntry local_id="snapshot_button_view" objectClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButton" viewClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButtonView" />
            <OTViewEntry local_id="snapshot-chooser-view" objectClass="org.concord.otrunk.ui.snapshot.OTSnapshotChooser" viewClass="org.concord.otrunk.ui.snapshot.OTSnapshotChooserView" />
            <OTViewEntry local_id="journal_album_view" objectClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbum" viewClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbumView" />
            <OTDocumentViewConfig local_id="compound_doc_view" objectClass="org.concord.otrunk.view.document.OTCompoundDoc" viewClass="org.concord.otrunk.view.document.OTDocumentView">
              <cssBlocks>
                <OTCssText cssText="body { font-size: 18; FONT-STYLE: normal; FONT-FAMILY: Verdana, Arial; FONT-VARIANT: normal; TEXT-DECORATION: none }" />
              </cssBlocks>
            </OTDocumentViewConfig>
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTButton" viewClass="org.concord.otrunk.ui.swing.OTButtonView" />
            <OTViewEntry local_id="script-view" objectClass="org.concord.otrunk.script.ui.OTScriptObject" viewClass="org.concord.otrunk.script.ui.OTScriptObjectView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTButton" viewClass="org.concord.otrunk.ui.swing.OTButtonView" />
            <OTChoiceViewConfig local_id="choice-checkbox-view" objectClass="org.concord.otrunk.ui.OTChoiceMultiple" viewClass="org.concord.otrunk.ui.swing.OTChoiceCheckBoxView" useViewsAsChoices="true" />
            <OTChoiceViewConfig local_id="choice-radio-view" objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceRadioButtonView" useViewsAsChoices="true" />
            <OTViewEntry id="453a61b0-e18b-11dc-95ff-0800200c9a66" objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxView" />
            <OTViewEntry objectClass="org.concord.otrunk.script.ui.OTScriptObject" viewClass="org.concord.otrunk.script.ui.OTScriptObjectView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTCardContainer" viewClass="org.concord.otrunk.ui.swing.OTCardContainerView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTBorderContainer" viewClass="org.concord.otrunk.ui.swing.OTBorderContainerView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTPlacementContainer" viewClass="org.concord.otrunk.ui.swing.OTPlacementContainerView" />
            <OTViewEntry id="be713960-e18a-11dc-95ff-0800200c9a66" objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextEditView" />
            <OTViewEntry id="c93a7460-e18a-11dc-95ff-0800200c9a66" objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextView" />
            <OTViewEntry local_id="data-collector-view" viewClass="org.concord.datagraph.state.OTDataCollectorView" objectClass="org.concord.datagraph.state.OTDataCollector" />
            <OTViewEntry viewClass="org.concord.datagraph.state.OTDataGraphView" objectClass="org.concord.datagraph.state.OTDataGraph" />
            <OTViewEntry viewClass="org.concord.data.state.OTDataFieldView" objectClass="org.concord.data.state.OTDataField" />
            <OTViewEntry local_id="drawing-view" viewClass="org.concord.datagraph.state.OTDataDrawingToolView" objectClass="org.concord.graph.util.state.OTDrawingTool" />
            <OTViewEntry viewClass="org.concord.datagraph.state.OTMultiDataGraphView" objectClass="org.concord.datagraph.state.OTMultiDataGraph" />
            <OTViewEntry local_id="cck-view" objectClass="org.concord.otrunkcck.OTCCKModel" viewClass="org.concord.otrunkcck.OTCCKModelView" />
            <OTViewEntry local_id="data-table-view" objectClass="org.concord.data.state.OTDataTable" viewClass="org.concord.data.state.OTDataTableView" />
            <OTViewEntry local_id="netlogo-view" viewClass="org.concord.otrunknl4.OTNLogoModelView" objectClass="org.concord.otrunknl4.OTNLogoModel" />
            <OTViewEntry objectClass="org.concord.otrunkphet.balloons.OTPhetBalloonsModel" viewClass="org.concord.otrunkphet.balloons.OTPhetBalloonsModelView" />
            <OTViewEntry local_id="sound-player-view" objectClass="org.concord.otrunk.ui.OTSoundPlayer" viewClass="org.concord.otrunk.ui.swing.OTSoundPlayerView" />
            <OTPrototypeViewEntry id="textsize-choice-view" objectClass="org.concord.otrunk.OTSystem" viewClass="org.concord.otrunk.view.prototype.OTPrototypeView" copyPrototype="false">
              <viewEntry>
                <object refid="453a61b0-e18b-11dc-95ff-0800200c9a66" />
              </viewEntry>
              <prototype>
                <OTChoice>
                  <choices>
                    <OTOverlay id="da41a2a0-c44e-11dc-95ff-0800200c9a66" name="Small text">
                      <deltaObjectMap>
                        <entry key="23cc14f0-c44f-11dc-95ff-0800200c9a66">
                          <OTCssText src="file:/Users/geoffreykwan/dev/workspaces/vleworkspace/WISE Project Converter/src/test/css/otrunk-small-font.css" />
                        </entry>
                      </deltaObjectMap>
                    </OTOverlay>
                    <OTOverlay id="6cc8e2b0-c44e-11dc-95ff-0800200c9a66" name="Normal text" />
                    <OTOverlay id="7ba31210-c44e-11dc-95ff-0800200c9a66" name="Large text">
                      <deltaObjectMap>
                        <entry key="23cc14f0-c44f-11dc-95ff-0800200c9a66">
                          <OTCssText src="file:/Users/geoffreykwan/dev/workspaces/vleworkspace/WISE Project Converter/src/test/css/otrunk-large-font.css" />
                        </entry>
                      </deltaObjectMap>
                    </OTOverlay>
                  </choices>
                </OTChoice>
              </prototype>
              <controller>
                <OTPrototypeEventController>
                  <mapping>
                    <OTPrototypeMapEntry modelProperty="overlays[0]" prototypeProperty="currentChoice" />
                  </mapping>
                </OTPrototypeEventController>
              </controller>
            </OTPrototypeViewEntry>
            <OTPrototypeViewEntry objectClass="org.concord.otrunk.OTSystem" viewClass="org.concord.otrunk.view.prototype.OTPrototypeView" copyPrototype="false">
              <viewEntry>
                <object refid="453a61b0-e18b-11dc-95ff-0800200c9a66" />
              </viewEntry>
              <prototype>
                <OTChoice>
                  <choices>
                    <OTOverlay name="English" />
                  </choices>
                </OTChoice>
              </prototype>
              <controller>
                <OTPrototypeEventController>
                  <mapping>
                    <OTPrototypeMapEntry modelProperty="overlays[1]" prototypeProperty="currentChoice" />
                  </mapping>
                </OTPrototypeEventController>
              </controller>
            </OTPrototypeViewEntry>
            <OTViewEntry objectClass="org.concord.graph.util.state.OTDrawingTool2" viewClass="org.concord.datagraph.state.OTDataDrawingToolView" />
          </viewEntries>
          <modes>
            <OTViewMode name="authoring">
              <map>
                <entry key="be713960-e18a-11dc-95ff-0800200c9a66">
                  <OTViewEntry objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextEditEditView" />
                </entry>
                <entry key="${journal_album_view}">
                  <OTViewEntry objectClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbum" viewClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbumEditView" />
                </entry>
                <entry key="${sound-grapher-view}">
                  <OTViewEntry viewClass="org.concord.multimedia.state.ui.OTSoundDataCollectorEditView" objectClass="org.concord.multimedia.state.OTSoundDataCollector" />
                </entry>
                <entry key="${moz-swing-view}">
                  <OTViewEntry objectClass="org.concord.otrunk.browser.mozswing.OTMozSwing" viewClass="org.concord.otrunk.browser.mozswing.OTMozSwingEditView" />
                </entry>
                <entry key="${choice-radio-view}">
                  <OTChoiceViewConfig objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxEditView" useViewsAsChoices="true" />
                </entry>
                <entry key="${choice-checkbox-view}">
                  <OTChoiceViewConfig objectClass="org.concord.otrunk.ui.OTChoiceMultiple" viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxEditView" useViewsAsChoices="true" />
                </entry>
                <entry key="${data-table-view}">
                  <OTViewEntry objectClass="org.concord.data.state.OTDataTable" viewClass="org.concord.otrunk.ui.swing.OTDataTableEditView" />
                </entry>
                <entry key="${netlogo-view}">
                  <OTViewEntry viewClass="org.concord.otrunknl4.OTNLogoModelEditView" objectClass="org.concord.otrunknl4.OTNLogoModel" />
                </entry>
                <entry key="${compound_doc_view}">
                  <OTDocumentEditViewConfig objectClass="org.concord.otrunk.view.document.OTCompoundDoc" viewClass="org.concord.otrunk.view.document.edit.OTDocumentEditView">
                    <documentViewConfig>
                      <object refid="${compound_doc_view}" />
                    </documentViewConfig>
                    <objectsToInsert>
                      <OTText name="Text field" />
                      <OTDrawingTool2 name="Draw tool" />
                      <OTChoice name="Multiple-choice (single answer)" />
                      <OTChoiceMultiple name="Multiple-choice (check boxes)" />
                      <OTDataTable name="Data table" showLastRowForAddingNew="true">
                        <dataStore>
                          <OTDataStore numberChannels="2" />
                        </dataStore>
                      </OTDataTable>
                      <OTDataCollector name="Data graph" title="Data graph">
                        <source>
                          <OTDataGraphable name="Data Graph" connectPoints="true" controllable="true" yColumn="1" drawMarks="false" color="16711680" xColumn="0" lineWidth="2.0">
                            <dataStore>
                              <OTDataStore />
                            </dataStore>
                          </OTDataGraphable>
                        </source>
                        <xDataAxis>
                          <OTDataAxis max="60.0" units="s" min="0.0" label="Time" />
                        </xDataAxis>
                        <yDataAxis>
                          <OTDataAxis max="40.0" units="" min="0.0" label="" />
                        </yDataAxis>
                      </OTDataCollector>
                      <OTSoundPlayer name="Sound player" />
                      <OTSoundDataCollector name="Sound grapher" title="Data graph">
                        <source>
                          <OTDataGraphable drawMarks="false" color="255" connectPoints="true" xColumn="0" yColumn="1" name="vf" lineWidth="2.0">
                            <dataProducer>
                              <OTSoundDataProducer isFFT="false" />
                            </dataProducer>
                            <dataStore>
                              <OTDataStore />
                            </dataStore>
                          </OTDataGraphable>
                        </source>
                        <xDataAxis>
                          <OTDataAxis max="0.06" units="ms" min="0.0" label="Time" />
                        </xDataAxis>
                        <yDataAxis>
                          <OTDataAxis max="150.0" units="" min="-150.0" label="" />
                        </yDataAxis>
                      </OTSoundDataCollector>
                    </objectsToInsert>
                  </OTDocumentEditViewConfig>
                </entry>
                <entry key="${cck-view}">
                  <OTViewEntry objectClass="org.concord.otrunkcck.OTCCKModel" viewClass="org.concord.otrunkcck.OTCCKModelEditView" />
                </entry>
                <entry key="${data-collector-view}">
                  <OTDataCollectorViewConfig viewClass="org.concord.otrunk.graph.OTDataCollectorEditView" objectClass="org.concord.datagraph.state.OTDataCollector">
                    <predefinedGraphs>
                      <object refid="088786c2-8719-11dc-8314-0800200c9a66" />
                    </predefinedGraphs>
                  </OTDataCollectorViewConfig>
                </entry>
                <entry key="${drawing-view}">
                  <OTViewEntry viewClass="org.concord.otrunk.graph.OTDataDrawingToolEditView" objectClass="org.concord.graph.util.state.OTDrawingTool" />
                </entry>
                <entry key="${sound-player-view}">
                  <OTViewEntry objectClass="org.concord.otrunk.ui.OTSoundPlayer" viewClass="org.concord.otrunk.ui.swing.OTSoundPlayerEditView" />
                </entry>
                <entry key="${mw-view}">
                  <OTViewEntry objectClass="org.concord.otrunkmw.OTModelerPage" viewClass="org.concord.otrunkmw.OTModelerPageEditView" />
                </entry>
              </map>
            </OTViewMode>
          </modes>
        </OTViewBundle>
        <OTSharingBundle />
      </bundles>
      <root>
        <OTPasProject id="971534ac-3f22-11dd-b240-cde0bfdd2411" title="Using Conditionals: Part 3 -- Virtual Pet" isAuthoringMode="false">
          <journalAlbum>
            <OTJournalAlbum id="4db44b59-5cff-11dd-a4b6-9b08a7b15b3c">
              <entries>
                <OTJournalPage title="Journal Page 1" studentPage="false" creationTime="Aug 22 at 1:07" notes="Add a note describing this journalPage...">
                  <parts>
                    <OTCompoundDoc>
                      <documentRefs>
                        <OTText id="9305318c-7303-11dd-b0b7-63524403b921" name="Text field" rows="2" />
                      </documentRefs>
                      <bodyText>
                        Hi I am a Journal 1.
                        <br />
                        <br />
                        <object refid="9305318c-7303-11dd-b0b7-63524403b921" />
                        <br />
                      </bodyText>
                    </OTCompoundDoc>
                    <OTCompoundDoc>
                      <documentRefs>
                        <OTText id="9305318d-7303-11dd-b0b7-63524403b921" name="Text field" rows="2" />
                      </documentRefs>
                      <bodyText>
                        Hi I am an answer to a part 2.
                        <br />
                        <br />
                        <object refid="9305318d-7303-11dd-b0b7-63524403b921" />
                        <br />
                      </bodyText>
                    </OTCompoundDoc>
                  </parts>
                </OTJournalPage>
              </entries>
            </OTJournalAlbum>
          </journalAlbum>
          <activityList>
            <OTPasActivity id="108577c9-ffa2-11dd-b2c3-7bd89c45bea2" title="A1.  Introduction" authorNotes="">
              <stepList>
                <OTIntroPage id="78545128-0234-11de-9062-13382964bfbf" title="S1.  Objectives" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;

&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;div class="header"&gt;Objectives&lt;/div&gt;

&lt;div id="content"&gt;
  
  &lt;div class="bubbleBox"&gt;
    &lt;div class="bubbleDivLeft"&gt;
      &lt;div class="blue speech talkLeft"&gt; &lt;img src="./art/constructor_bots/short_right.png" /&gt;
        &lt;div id="objectivesText"&gt;
          &lt;p&gt;Welcome back! Thanks again for helping me stamp out those bugs in the last section.  You're the best.&lt;/p&gt;
          &lt;p&gt;So, Cam, what's on the plate for today?&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;br&gt;
  &lt;div class="bubbleBox"&gt;
    &lt;div class="bubbleDivRight"&gt;
      &lt;div class="green speech talkRight"&gt; &lt;img src="./art/constructor_bots/tall_right.png" /&gt;
        &lt;div id="objectivesText"&gt;
          &lt;p&gt;Here's our objectives for this section, Bolt.&lt;/p&gt;
          &lt;ul&gt;
            &lt;li&gt;Review the previous section (Instant Quiz, 4 questions)&lt;/li&gt;
            &lt;li&gt;Modify a "Virtual Pet" module using BlueJ.&lt;/li&gt;
            &lt;li&gt;Learn about Varied-State Conditionals.&lt;/li&gt;
          &lt;/ul&gt;
          &lt;p&gt;Let's get started!&lt;/p&gt;
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;
&lt;/div&gt;
&lt;/body&gt;
&lt;/html&gt;</content>
                </OTIntroPage>
                <OTQuiz id="f686315b-0212-11de-9062-13382964bfbf" title="S2.  Instant Quiz 1/4" authorNotes="" hoverString="Pas Step" speechText="" isInjectPrompt="false" lockStudentAnswers="true" randomChoiceOrder="false">
                  <jaxbXML>
                    <assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0" xmlns:ns3="http://www.w3.org/1998/Math/MathML" xmlns:ns2="http://www.w3.org/1999/xlink" timeDependent="false" adaptive="false">
                      <responseDeclaration identifier="CHOICE_SELF_CHECK_ID">
                        <correctResponse interpretation="choice 3" />
                      </responseDeclaration>
                      <responseDeclaration identifier="CHOICE_ASSMT_0">
                        <correctResponse>
                          <value isDefault="false" isCorrect="false">SIMPLE_CHOICE_ID1</value>
                        </correctResponse>
                      </responseDeclaration>
                      <itemBody>
                        <choiceInteraction hasInlineFeedback="false" responseIdentifier="CHOICE_SELF_CHECK_ID" maxChoices="1" shuffle="false">
                          <prompt>&lt;html&gt;&lt;body style="font-size:1.2em; font-weight:bold; font-family:Verdana, Arial,Helvetica; width:400px; margin:20px 0 10px 0 ; color:#3333FF; line-height:120%;"&gt;


Sample MC Question Here


&lt;/body&gt;&lt;/html&gt;</prompt>
                          <simpleChoice fixed="true" identifier="choice 1">Choice A</simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 2">Choice A</simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 3">Choice A</simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 4">Choice A</simpleChoice>
                        </choiceInteraction>
                      </itemBody>
                    </assessmentItem>
                  </jaxbXML>
                  <introductionHtml>&lt;html&gt;&lt;body style="font-size:1.2em; font-weight:bold; font-family:Verdana, Arial,Helvetica; width:400px; margin:20px 0 10px 0 ; color:#3333FF; line-height:120%;"&gt;


Click the adjacent EDIT button, then type your introduction here (overwrite these instructions).Your question will automatically be formatted with HTML.


&lt;/body&gt;&lt;/html&gt;</introductionHtml>
                </OTQuiz>
                <OTQuiz id="23142340-0213-11de-9062-13382964bfbf" title="S3.  Instant Quiz 2/4" authorNotes="" hoverString="Pas Step" speechText="" isInjectPrompt="false" lockStudentAnswers="false" randomChoiceOrder="false">
                  <jaxbXML>
                    <assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0" xmlns:ns3="http://www.w3.org/1998/Math/MathML" xmlns:ns2="http://www.w3.org/1999/xlink" timeDependent="false" adaptive="false">
                      <responseDeclaration identifier="CHOICE_SELF_CHECK_ID">
                        <correctResponse interpretation="choice 3" />
                      </responseDeclaration>
                      <responseDeclaration identifier="TEXT_ASSMT_0" />
                      <itemBody>
                        <extendedTextInteraction hasInlineFeedback="false" placeholderText="" responseIdentifier="TEXT_ASSMT_0" expectedLines="3">
                          <prompt>&lt;html&gt;&lt;body style="font-size:1.2em; font-weight:bold; font-family:Verdana, Arial,Helvetica; width:400px; margin:20px 0 10px 0 ; color:#3333FF; line-height:120%;"&gt;


Open Response Question Goes Here


&lt;/body&gt;&lt;/html&gt;</prompt>
                        </extendedTextInteraction>
                      </itemBody>
                    </assessmentItem>
                  </jaxbXML>
                  <introductionHtml>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta name="generator"
content="HTML Tidy for Java (vers. 26 Sep 2004), see www.w3.org" /&gt;
&lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;</introductionHtml>
                </OTQuiz>
                <OTQuiz id="5ad65c49-0215-11de-9062-13382964bfbf" title="S4.  Instant Quiz 3/4" authorNotes="" hoverString="Pas Step" speechText="" isInjectPrompt="false" lockStudentAnswers="true" randomChoiceOrder="false">
                  <jaxbXML>
                    <assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0" xmlns:ns3="http://www.w3.org/1998/Math/MathML" xmlns:ns2="http://www.w3.org/1999/xlink" timeDependent="false" adaptive="false">
                      <responseDeclaration identifier="CHOICE_SELF_CHECK_ID">
                        <correctResponse interpretation="choice 3" />
                      </responseDeclaration>
                      <itemBody>
                        <choiceInteraction hasInlineFeedback="false" responseIdentifier="CHOICE_SELF_CHECK_ID" maxChoices="1" shuffle="false">
                          <prompt>&lt;html&gt;&lt;body style="font-size:1.2em; font-weight:bold; font-family:Verdana, Arial,Helvetica; width:400px; margin:20px 0 10px 0 ; color:#3333FF; line-height:120%;"&gt;


Match &amp; Sequence question goes here


&lt;/body&gt;&lt;/html&gt;</prompt>
                          <simpleChoice fixed="true" identifier="choice 1" />
                          <simpleChoice fixed="true" identifier="choice 2" />
                          <simpleChoice fixed="true" identifier="choice 3" />
                          <simpleChoice fixed="true" identifier="choice 4" />
                        </choiceInteraction>
                      </itemBody>
                    </assessmentItem>
                  </jaxbXML>
                  <introductionHtml>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta name="generator"
content="HTML Tidy for Java (vers. 26 Sep 2004), see www.w3.org" /&gt;
&lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;/body&gt;
&lt;/html&gt;</introductionHtml>
                </OTQuiz>
                <OTQuiz id="477e7eb4-0213-11de-9062-13382964bfbf" title="S5.  Instant Quiz 4/4" authorNotes="" hoverString="Pas Step" speechText="" isInjectPrompt="false" lockStudentAnswers="true" randomChoiceOrder="false">
                  <jaxbXML>
                    <assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0" xmlns:ns3="http://www.w3.org/1998/Math/MathML" xmlns:ns2="http://www.w3.org/1999/xlink" timeDependent="false" adaptive="false">
                      <responseDeclaration identifier="CHOICE_SELF_CHECK_ID">
                        <correctResponse interpretation="choice 3" />
                      </responseDeclaration>
                      <itemBody>
                        <choiceInteraction hasInlineFeedback="false" responseIdentifier="CHOICE_SELF_CHECK_ID" maxChoices="1" shuffle="false">
                          <prompt>&lt;html&gt;&lt;body style="font-size:1.2em; font-weight:bold; font-family:Verdana, Arial,Helvetica; width:400px; margin:20px 0 10px 0 ; color:#3333FF; line-height:120%;"&gt;


FILL THE BLANK style question goes here


&lt;/body&gt;&lt;/html&gt;</prompt>
                          <simpleChoice fixed="true" identifier="choice 1" />
                          <simpleChoice fixed="true" identifier="choice 2" />
                          <simpleChoice fixed="true" identifier="choice 3" />
                          <simpleChoice fixed="true" identifier="choice 4" />
                        </choiceInteraction>
                      </itemBody>
                    </assessmentItem>
                  </jaxbXML>
                  <introductionHtml>&lt;html&gt;&lt;body style="font-size:1.2em; font-weight:bold; font-family:Verdana, Arial,Helvetica; width:400px; margin:20px 0 10px 0 ; color:#3333FF; line-height:120%;"&gt;


Click the adjacent EDIT button, then type your introduction here (overwrite these instructions).Your question will automatically be formatted with HTML.


&lt;/body&gt;&lt;/html&gt;</introductionHtml>
                </OTQuiz>
              </stepList>
            </OTPasActivity>
            <OTPasActivity id="af231e8c-0210-11de-9062-13382964bfbf" title="A2:  Explore New Ideas" authorNotes="">
              <stepList>
                <OTReadingPage id="e6a4256a-01e1-11de-9062-13382964bfbf" title="S1.  Introduction to Virtual Pets" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Introduction to Virtual Pet&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt; Now it's time to put your knowledge of conditionals into practice.  For the next few days, you'll
work on the &lt;span class="vocab"&gt;Virtual Pet&lt;/span&gt; mini-project.
&lt;/p&gt;

&lt;img class="left" src="./art/constructor_bots/hover_right.png" /&gt;

&lt;p&gt;Constructor children need to have toys to play with, of course.  One toy, 
popular for Constructors as well as humans, is a little handheld device in which a pet "lives".
The pet has &lt;em&gt;moods&lt;/em&gt;, such as happiness or pain, and shows its current mood(s) through an image and a message on the toy.  The owner of the toy can make the pet &lt;em&gt;behave&lt;/em&gt; in certain ways.  And, often, when the pet does something, its mood changes.
&lt;/p&gt;

&lt;p&gt;Cam is, like you, learning to program in Java. She, like you will be shortly, is writing a Java program that will act like a fully working Virtual Pet toy &amp;mdash one inside a computer.  The toy will be better than any she can buy, though, because she gets to decide what she can do to the pet, and what happens afterwards.
&lt;/p&gt;


&lt;/body&gt;
&lt;/html&gt;</content>
                </OTReadingPage>
                <OTExamplePage id="ee4a9d1b-0452-11de-9e80-e9f7a2343f8e" title="S2.  Open Cam's BlueJ Project" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;

&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Launch Cam's BlueJ Project&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;Let's use BlueJ to open Cam's first attempt at writing a Virtual Pet toy, and take a look at 
what she did.  
&lt;/p&gt;

&lt;div class="openbluejproj"&gt;Open the "cam-v1" project. 
&lt;/div&gt;


&lt;p&gt;As you can see, there is a single class, named &lt;tt&gt;VirtualPet&lt;/tt&gt;. 
Each object of this class representa a virtual pet toy.
&lt;/p&gt;

&lt;div class="doit"&gt;Make a &lt;tt&gt;VirtualPet&lt;/tt&gt; object now, using the &lt;vocab&gt;object bench&lt;/vocab&gt; in the usual way.  You can name it anything you like.
&lt;/div&gt;

&lt;p&gt;A window will open, containing an image that represents the mood of the Virtual Pet you just made.  Cam has programmed the Virtual Pet to show a "normal" mood at the start.
&lt;/p&gt;

&lt;p&gt;The virtual pet has behaviors that you can invoke in the usual way.  You'll see the methods "feed", "exercise", and "sleep". 
&lt;/p&gt;

&lt;div class="doit"&gt;Invoke those methods now on your &lt;tt&gt;VirtualPet&lt;/tt&gt; object, and see what happens!
&lt;/div&gt;


&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="3a36821b-0230-11de-9062-13382964bfbf" title="S3.  Explore the Code 1" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Explore the Code 1&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;Now, let's look at the Java code that Cam wrote.&lt;/p&gt;

&lt;div class="doit"&gt;Open the editor for &lt;tt&gt;VirtualPet&lt;/tt&gt; class, and examine the code. &lt;/div&gt;
&lt;h4&gt;Tip 1 of 4&lt;/h4&gt;

&lt;div class="bubbleBox"&gt;
    &lt;div class="bubbleDivRight"&gt;
      &lt;div class="green speech talkRight"&gt; &lt;img src="./art/constructor_bots/tall_right.png" /&gt;
        &lt;div id="objectivesText"&gt;
          &lt;p&gt;The comment at the top shows the version and the author.  We are going to be looking at other versions of Cam's code, adding functionality and debugging for her.  Edit that comment to help you keep track of which version you are working on.
        &lt;/div&gt;
      &lt;/div&gt;
    &lt;/div&gt;
  &lt;/div&gt;


&lt;/p&gt;

&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="5b391e6f-0453-11de-9e80-e9f7a2343f8e" title="S4.  Explore the Code 2" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Explore the Code 2&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;Now, let's look at the Java code that Cam wrote.&lt;/p&gt;

&lt;div class="doit"&gt;Open the editor for &lt;tt&gt;VirtualPet&lt;/tt&gt; class, and examine the code. &lt;/div&gt;

&lt;h4&gt;Tip 2 of 4&lt;/h4&gt;

&lt;p&gt;The first &lt;span class="vocab"&gt;instance variable&lt;/span&gt; uses the special class &lt;tt&gt;VirtualPetFace&lt;/tt&gt; that we wrote for Cam and you.  It takes care of the images, the messages, and so forth; its details aren't important.  How it's controlled to show the image and messages that you want &lt;em&gt;is&lt;/em&gt; important &amp;mdash; more on that below.
&lt;/p&gt;


&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="64456730-0453-11de-9e80-e9f7a2343f8e" title="S5.  Explore the Code 3" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Explore the Code 3&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;Now, let's look at the Java code that Cam wrote.&lt;/p&gt;

&lt;div class="doit"&gt;Open the editor for &lt;tt&gt;VirtualPet&lt;/tt&gt; class, and examine the code. &lt;/div&gt;

&lt;h4&gt;Tip 3 of 4&lt;/h4&gt;

&lt;p&gt;You can see the &lt;span class="vocab"&gt;constructor&lt;/span&gt; and the three methods that you explored: &lt;tt&gt;feed&lt;/tt&gt;, &lt;tt&gt;exercise&lt;/tt&gt;, and &lt;tt&gt;sleep&lt;/tt&gt;.  Look at how the methods set the message and the image for the virtual pet: they use the &lt;tt&gt;VirtualPetFace&lt;/tt&gt; object (stored in the &lt;tt&gt;face&lt;/tt&gt; instance variable) to call the methods &lt;tt&gt;setMessage&lt;/tt&gt; and &lt;tt&gt;setImage&lt;/tt&gt;.  Each of those takes a &lt;span class="vocab"&gt;string&lt;/span&gt; as its &lt;span class="vocab"&gt;argument&lt;/span&gt;.
&lt;/p&gt;


&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="6b6ac781-0453-11de-9e80-e9f7a2343f8e" title="S6.  Explore the Code 4" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Explore the Code 4&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;Now, let's look at the Java code that Cam wrote.&lt;/p&gt;

&lt;div class="doit"&gt;Open the editor for &lt;tt&gt;VirtualPet&lt;/tt&gt; class, and examine the code. &lt;/div&gt;

&lt;h4&gt;Tip 4 of 4&lt;/h4&gt;

&lt;p&gt; The second instance variable, &lt;tt&gt;hunger&lt;/tt&gt;, represents how hungry the pet is.  Each of the methods has some effect on it.  We'll look more closely at it in a bit.  
&lt;/p&gt;


&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
              </stepList>
            </OTPasActivity>
            <OTPasActivity id="ea2774f5-0210-11de-9062-13382964bfbf" title="Programming" authorNotes="">
              <stepList>
                <OTExamplePage id="569d69f5-ee64-11dd-b081-1b1eed2735e4" title="Make a Quick Fix" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;
&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Make a Quick Fix&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p class="doit"&gt;
You may have noticed that Cam's pet doesn't say anything when it sleeps.  Add a Java statement so the pet gives an appropriate message (e.g., "zzzzzzz") when it is told to sleep.  Make sure to test your code!
&lt;/p&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTSelfAssessment id="08608547-0458-11de-9e80-e9f7a2343f8e" title="How Does Hunger Work?" authorNotes="" hoverString="Pas Step" speechText="" isInjectPrompt="false" lockStudentAnswers="true" randomChoiceOrder="false">
                  <jaxbXML>
                    <assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0" xmlns:ns3="http://www.w3.org/1998/Math/MathML" xmlns:ns2="http://www.w3.org/1999/xlink" timeDependent="false" adaptive="false">
                      <responseDeclaration identifier="CHOICE_SELF_CHECK_ID">
                        <correctResponse interpretation="choice 3" />
                      </responseDeclaration>
                      <itemBody>
                        <choiceInteraction hasInlineFeedback="true" responseIdentifier="CHOICE_SELF_CHECK_ID" maxChoices="1" shuffle="false">
                          <prompt>&lt;html&gt;&lt;body&gt;
&lt;p&gt;What would the value of the virtual pet's &lt;tt&gt;hunger&lt;/tt&gt;
variable be if, immediately after the pet was created, she invoked
the following behaviors in order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sleep&lt;/li&gt;
&lt;li&gt;Feed&lt;/li&gt;
&lt;li&gt;Feed&lt;/li&gt;
&lt;li&gt;Exercise&lt;/li&gt;
&lt;li&gt;Sleep&lt;/li&gt;
&lt;li&gt;Exercise&lt;/li&gt;
&lt;/ol&gt;
&lt;/body&gt;&lt;/html&gt;</prompt>
                          <simpleChoice fixed="true" identifier="choice 1">
                            <feedbackInline identifier="choice 1" showHide="show" />
                            0
                          </simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 2">
                            <feedbackInline identifier="choice 2" showHide="show" />
                            3
                          </simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 3">
                            <feedbackInline identifier="choice 3" showHide="show" />
                            7
                          </simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 4">
                            <feedbackInline identifier="choice 4" showHide="show" />
                            8
                          </simpleChoice>
                          <simpleChoice fixed="true" identifier="SIMPLE_CHOICE_ID5">
                            <feedbackInline identifier="SIMPLE_CHOICE_ID5" />
                            We cant know.
                          </simpleChoice>
                        </choiceInteraction>
                      </itemBody>
                    </assessmentItem>
                  </jaxbXML>
                  <introductionHtml>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta name="generator"
content="HTML Tidy for Java (vers. 26 Sep 2004), see www.w3.org" /&gt;
&lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;There is a second instance variable in Cam's code:. Cam is using
the &lt;tt&gt;hunger&lt;/tt&gt; instance variable to keep track of how hungry
the pet is at any particular time. Some behaviors increase the
value of &lt;tt&gt;hunger&lt;/tt&gt;. That is, make the pet get hungrier.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</introductionHtml>
                </OTSelfAssessment>
                <OTExamplePage id="6bdb497c-0458-11de-9e80-e9f7a2343f8e" title="Fill in the Blank" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html&gt;&lt;head&gt;&lt;/head&gt;

&lt;body&gt;



FILL IN THE BLANK CONTENT HERE


&lt;/body&gt;&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="1a0c2c6e-0455-11de-9e80-e9f7a2343f8e" title="Making Hunger Realistic 1" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Making Hunger Realistic 1&lt;/div&gt;

&lt;div class="content"&gt;

&lt;p&gt;Lets help Cam make her virtual pet a little more interesting.  Obviously, it isn't realistic that 
a pet could get hungrier and hungrier forever.  At some point the pet should, well, perish.
&lt;/p&gt;

&lt;p class="doit"&gt;Add code so that, if the pet's &lt;tt&gt;hunger&lt;/tt&gt; variable goes over &lt;tt&gt;12&lt;/tt&gt;, it dies.
&lt;/p&gt;

&lt;p&gt;Do this in the "cam-v1" project.  (Remember, you can always grab the code in the original project again from the &lt;a href="page"&gt;course resources&lt;/a&gt;).  Some tips you might keep in mind:
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;
Q: How do I make a pet dead with a Java statement?
&lt;li&gt;
A: Being "dead" is just another mood for the Virtual Pet.  You can't just type in any mood name, however; we've only provided initial images for some moods.  The moods "dead", "skeleton", and "pushingdaisies" will work fine, however.  

&lt;/li&gt;
&lt;/ul&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="4f596219-0456-11de-9e80-e9f7a2343f8e" title="Making Hunger Realistic 2" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Making Hunger Realistic 2&lt;/div&gt;

&lt;div class="content"&gt;

&lt;p&gt;Lets help Cam make her virtual pet a little more interesting.  Obviously, it isn't realistic that 
a pet could get hungrier and hungrier forever.  At some point the pet should, well, perish.
&lt;/p&gt;

&lt;p class="doit"&gt;Add code so that, if the pet's &lt;tt&gt;hunger&lt;/tt&gt; variable goes over &lt;tt&gt;12&lt;/tt&gt;, it dies.
&lt;/p&gt;

&lt;p&gt;Do this in the "cam-v1" project.  (Remember, you can always grab the code in the original project again from the &lt;a href="page"&gt;course resources&lt;/a&gt;).  Some tips you might keep in mind:
&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;

&lt;li&gt;Q: Where should I put Java code to check whether &lt;tt&gt;hunger&lt;/tt&gt; has gone above &lt;tt&gt;12&lt;/tt&gt;? 
&lt;li&gt;A: Think about what is easiest to do and will be simplest to read.  A good first thought is wherever the mood image gets set.  Another thought is only in places where the &lt;tt&gt;hunger&lt;/tt&gt; variable gets changed.  


&lt;/li&gt;
&lt;/ul&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="55675efa-0456-11de-9e80-e9f7a2343f8e" title="Making Hunger Realistic 3" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Making Hunger Realistic 3&lt;/div&gt;

&lt;div class="content"&gt;

&lt;p&gt;Lets help Cam make her virtual pet a little more interesting.  Obviously, it isn't realistic that 
a pet could get hungrier and hungrier forever.  At some point the pet should, well, perish.
&lt;/p&gt;

&lt;p class="doit"&gt;Add code so that, if the pet's &lt;tt&gt;hunger&lt;/tt&gt; variable goes over &lt;tt&gt;12&lt;/tt&gt;, it dies.
&lt;/p&gt;

&lt;p&gt;Do this in the "cam-v1" project.  (Remember, you can always grab the code in the original project again from the &lt;a href="page"&gt;course resources&lt;/a&gt;).  Some tips you might keep in mind:
&lt;/p&gt;

&lt;ul&gt; 
&lt;li&gt;Q: If death is just a mood, then won't behaviors invoked later change the mood, and bring the pet back to life?&lt;/li&gt;
&lt;li&gt;A: Well... yes.  You don't need to worry about that for now, but you might think about how you would fix that.&lt;/li&gt;
&lt;/ul&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
              </stepList>
            </OTPasActivity>
            <OTPasActivity id="c0e6d94f-0210-11de-9062-13382964bfbf" title="A4:  Connect Ideas" authorNotes="">
              <stepList>
                <OTExamplePage id="533cb803-029e-11de-aa46-594d426d2420" title="S1:  Is there a Better Way to Die?" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Is There a Better Way to Die?  (Brainstorm Discussion)&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;div id="brainstorm"&gt;

&lt;p&gt;Compare the following two solutions for the problem above&amp;mdash;changing the mood to "dead" if the hunger is over 12&amp;mdash;&lt;tt&gt;sleep&lt;/tt&gt; method:&lt;/p&gt;

&lt;table&gt;
&lt;tr&gt;
&lt;td&gt;
&lt;strong&gt;Version A&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;
public &lt;span class="redtext"&gt;void&lt;/span&gt; sleep() {&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;hunger = hunger + 1;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setMessage(&lt;span class="greentext"&gt;"zzzzzzzzzz"&lt;/span&gt;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setImage(&lt;span class="greentext"&gt;"asleep"&lt;/span&gt;);&lt;br&gt;    
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (hunger &gt; 12) {&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setMessage(&lt;span class="greentext"&gt;"I got too hungry!"&lt;/span&gt;);&lt;Br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setImage(&lt;span class="greentext"&gt;"dead"&lt;/span&gt;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;
&lt;/td&gt;
&lt;td&gt;
&lt;strong&gt;Version B&lt;/strong&gt;&lt;br&gt;
&lt;code&gt;
public &lt;span class="redtext"&gt;void&lt;/span&gt; sleep() {&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;hunger = hunger + 1;&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;if (hunger &gt; 12) {&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setMessage(&lt;span class="greentext"&gt;"I got too hungry!"&lt;/span&gt;);&lt;Br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setImage(&lt;span class="greentext"&gt;"dead"&lt;/span&gt;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;} else {&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setMessage(&lt;span class="greentext"&gt;"zzzzzzzzzz"&lt;/span&gt;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setImage(&lt;span class="greentext"&gt;"asleep"&lt;/span&gt;);&lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;
}&lt;br&gt;
&lt;/code&gt;
&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;

&lt;p&gt;Will these two versions behave identically, from the standpoint of someone playing with the toy?  If not, how will the difference show up, and which version do you think is better?  Why?&lt;/p&gt;

&lt;/div&gt;

&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="56d03331-0455-11de-9e80-e9f7a2343f8e" title="Squash the Bugs" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;

&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Squash the Bugs (Representing 'Tiredness')&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;To make things more entertaining, Constant tried to add "tiredness" to her Virtual Pet.  Her idea was to add a new instance variable, naming it &lt;code&gt;tired&lt;/code&gt;, and changing the behaviors so that the value of 
&lt;code&gt;tired&lt;/code&gt; is changed.  But, things aren't working quite right.
&lt;/p&gt;

&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
                <OTExamplePage id="8549cd72-044e-11de-9e80-e9f7a2343f8e" title="Thinking Ahead..." authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Brainstorm Discussion&lt;/div&gt;

&lt;div class="content"&gt;
 
	&lt;div id="brainstorm"&gt;
		&lt;img class="right" src="./art/constructor_bots/short_right.png" width="200px" /&gt;
		&lt;p&gt;Suggest one or two additional features to add to &lt;tt&gt;VirtualPet&lt;/tt&gt;.  Consider methods, instance variables, and interactions between them.&lt;/p&gt;
	&lt;/div&gt;

&lt;/div&gt;

&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
              </stepList>
            </OTPasActivity>
            <OTPasActivity id="cf0de551-0210-11de-9062-13382964bfbf" title="Summary" authorNotes="">
              <stepList>
                <OTExamplePage id="4c4a31a1-0230-11de-9062-13382964bfbf" title="Section Summary" authorNotes="" hoverString="Pas Step" speechText="">
                  <content>&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta http-equiv="Content-Type" content="text/html; charset=utf-8" /&gt;

&lt;base href="http://uccpdev.berkeley.edu/uccp-assets/" /&gt;

&lt;link rel="stylesheet" href="http://uccpdev.berkeley.edu/uccp-assets/css/UCCP.css" /&gt;


&lt;title&gt;Proof of Concept 2&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;div class="header"&gt;Section Summary&lt;/div&gt;

&lt;div class="content"&gt;
 
&lt;p&gt;Today, you got a first look at the virtual pet project, examining code from the constructor Cam.  
&lt;/p&gt;

&lt;p&gt;You added code to test how hungry a pet was, and looked at different possible solutions.
&lt;/p&gt;

&lt;p&gt;You also debugged Cam's code to add "tiredness" to her solution, making her pet more interesting.
&lt;/p&gt;

&lt;p&gt;In just this short time, the code we ended up with got somewhat complicated.  
Next time, we'll start looking into how to use &lt;vocab&gt;helper methods&lt;/vocab&gt; to make the &lt;tt&gt;VirtualPet&lt;/tt&gt; class much more manageable.  
After that, we look into how careful testing can help you be sure that changes you make do not introduce bugs.  
Eventually, you'll spend a few days with free rein to make your own virtual pet toy, the crazier the better!  Its for kids to play with, afterall.  &lt;/p&gt;


&lt;/body&gt;
&lt;/html&gt;</content>
                </OTExamplePage>
              </stepList>
            </OTPasActivity>
          </activityList>
        </OTPasProject>
      </root>
      <library>
        <OTCompoundDoc name="top-menu" showEditBar="false">
          <bodyText>
            <div class="top-menu">
              <table>
                <tr>
                  <td>
                    <object refid="${[no menu in author mode]}" viewid="textsize-choice-view" />
                  </td>
                </tr>
              </table>
            </div>
          </bodyText>
        </OTCompoundDoc>
      </library>
    </OTSystem>
  </objects>
</otrunk>

