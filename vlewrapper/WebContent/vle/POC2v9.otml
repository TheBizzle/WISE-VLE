<?xml version="1.0" encoding="UTF-8"?>
<otrunk id="33754150-b594-11d9-9669-0800200c9a66">
  <imports>
    <import class="org.concord.otrunk.OTSystem" />
    <import class="org.concord.otrunk.view.OTViewEntry" />
    <import class="org.concord.otrunk.view.OTViewBundle" />
    <import class="org.concord.otrunk.OTInclude" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasProject" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasActivity" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasStep" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTDisplayPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTEvidence" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTHelloWorld" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTOutsideLink" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTNote" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTStudentAssessment" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTSelfAssessment" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTChallengeQuestion" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTGenericOTrunkStep" />
    <import class="org.concord.graph.util.state.OTDrawingTool" />
    <import class="org.concord.otrunk.view.OTViewMode" />
    <import class="org.concord.data.state.OTDataStore" />
    <import class="org.concord.otrunk.graph.OTDataCollectorViewConfig" />
    <import class="org.concord.data.state.OTDataChannelDescription" />
    <import class="org.concord.data.state.OTDataField" />
    <import class="org.concord.data.state.OTWaveGenerator" />
    <import class="org.concord.data.state.OTMultiWaveGenerator" />
    <import class="org.concord.data.state.OTWave" />
    <import class="org.concord.datagraph.state.OTDataGraph" />
    <import class="org.concord.datagraph.state.OTDataAxis" />
    <import class="org.concord.datagraph.state.OTDataGraphable" />
    <import class="org.concord.datagraph.state.OTDataCollector" />
    <import class="org.concord.datagraph.state.OTMultiDataGraph" />
    <import class="org.concord.datagraph.state.OTDataPointLabel" />
    <import class="org.concord.datagraph.state.OTDataPointRuler" />
    <import class="org.concord.graph.util.state.OTDrawingTool" />
    <import class="org.concord.graph.util.state.OTDrawingStamp" />
    <import class="org.concord.graph.util.state.OTDrawingImageIcon" />
    <import class="org.concord.graph.util.state.OTDrawingShape" />
    <import class="org.concord.graph.util.state.OTPointTextLabel" />
    <import class="org.concord.otrunk.util.OTSharingBundle" />
    <import class="org.concord.otrunk.view.document.OTCompoundDoc" />
    <import class="org.concord.otrunk.view.document.OTDocumentViewConfig" />
    <import class="org.concord.otrunk.view.OTObjectEditViewConfig" />
    <import class="org.concord.data.state.OTDataStore" />
    <import class="org.concord.data.state.OTDataChannelDescription" />
    <import class="org.concord.data.state.OTDataField" />
    <import class="org.concord.data.state.OTDataTable" />
    <import class="org.concord.datagraph.state.OTDataGraph" />
    <import class="org.concord.datagraph.state.OTDataAxis" />
    <import class="org.concord.datagraph.state.OTDataGraphable" />
    <import class="org.concord.datagraph.state.OTDataCollector" />
    <import class="org.concord.datagraph.state.OTMultiDataGraph" />
    <import class="org.concord.datagraph.state.OTPluginView" />
    <import class="org.concord.datagraph.state.OTDataBarGraphable" />
    <import class="org.concord.framework.otrunk.view.OTFrame" />
    <import class="org.concord.graph.util.state.OTDrawingTool" />
    <import class="org.concord.graph.util.state.OTDrawingStamp" />
    <import class="org.concord.graph.util.state.OTDrawingImageIcon" />
    <import class="org.concord.graph.util.state.OTDrawingShape" />
    <import class="org.concord.graph.util.state.OTDrawingTool2" />
    <import class="org.concord.graph.util.state.OTPointTextLabel" />
    <import class="org.concord.multimedia.state.OTSoundDataCollector" />
    <import class="org.concord.multimedia.state.OTSoundDataProducer" />
    <import class="org.concord.otrunk.OTInclude" />
    <import class="org.concord.otrunk.OTSystem" />
    <import class="org.concord.otrunk.browser.mozswing.OTMozSwing" />
    <import class="org.concord.otrunk.graph.OTDataCollectorViewConfig" />
    <import class="org.concord.otrunk.overlay.OTOverlay" />
    <import class="org.concord.otrunk.script.ui.OTScriptObject" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariable" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableComponent" />
    <import class="org.concord.otrunk.script.ui.OTScriptVariableView" />
    <import class="org.concord.otrunk.script.js.OTJavascript" />
    <import class="org.concord.otrunk.script.OTScriptEngineBundle" />
    <import class="org.concord.otrunk.script.OTScriptEngineEntry" />
    <import class="org.concord.otrunk.ui.OTButton" />
    <import class="org.concord.otrunk.ui.OTCardContainer" />
    <import class="org.concord.otrunk.ui.OTChoice" />
    <import class="org.concord.otrunk.ui.OTChoiceMultiple" />
    <import class="org.concord.otrunk.ui.OTImage" />
    <import class="org.concord.otrunk.ui.OTModeSwitcher" />
    <import class="org.concord.otrunk.ui.OTSoundPlayer" />
    <import class="org.concord.otrunk.ui.OTText" />
    <import class="org.concord.otrunk.ui.swing.OTChoiceViewConfig" />
    <import class="org.concord.otrunk.view.OTFolderObject" />
    <import class="org.concord.otrunk.view.OTObjectEditViewConfig" />
    <import class="org.concord.otrunk.view.OTViewChild" />
    <import class="org.concord.otrunk.view.OTViewEntry" />
    <import class="org.concord.otrunk.view.OTViewBundle" />
    <import class="org.concord.otrunk.view.OTViewMode" />
    <import class="org.concord.otrunk.view.document.OTCompoundDoc" />
    <import class="org.concord.otrunk.view.document.OTCssText" />
    <import class="org.concord.otrunk.view.document.edit.OTDocumentEditViewConfig" />
    <import class="org.concord.otrunk.view.prototype.OTPrototypeViewEntry" />
    <import class="org.concord.otrunk.view.prototype.OTPrototypeEventController" />
    <import class="org.concord.otrunk.view.prototype.OTPrototypeMapEntry" />
    <import class="org.concord.otrunkmw.OTModelerPage" />
    <import class="org.concord.otrunknl4.OTNLogoModel" />
    <import class="org.concord.otrunkcck.OTCCKModel" />
    <import class="org.concord.otrunkphet.balloons.OTPhetBalloonsModel" />
    <import class="org.concord.sensor.state.OTDeviceConfig" />
    <import class="org.concord.sensor.state.OTExperimentRequest" />
    <import class="org.concord.sensor.state.OTInterfaceManager" />
    <import class="org.concord.sensor.state.OTSensorDataProxy" />
    <import class="org.concord.sensor.state.OTSensorRequest" />
    <import class="org.concord.sensor.state.OTZeroSensor" />
    <import class="org.concord.otrunk.view.OTViewService" />
    <import class="org.concord.otrunk.view.document.OTTextObject" />
    <import class="org.concord.otrunk.ui.OTChoiceWithFeedback" />
    <import class="org.telscenter.pas.otrunk.skeleton.OTPasHint" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTPedagogicaStep" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbum" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButton" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButtonView" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshot" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotAlbum" />
    <import class="org.concord.otrunk.ui.snapshot.OTSnapshotChooser" />
    <import class="org.telscenter.pas.otrunk.skeleton.journal.OTJournalStep" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTVideoPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTBrainstorm" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTIntroPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTReadingPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTQuiz" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTExamplePage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTSummaryPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTCartoonPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTSimulationPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTQuestionAnswer" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTTryitPage" />
    <import class="org.telscenter.pas.otrunk.skeleton.steps.OTHomeworkPage" />
  </imports>
  <objects>
    <OTSystem>
      <includes>
        <OTInclude href="http://tels-group.soe.berkeley.edu/aperritano/predefined-sensor-graphs.otml" />
      </includes>
      <bundles>
        <OTViewBundle>
          <viewEntries>
            <OTViewEntry objectClass="org.telscenter.pas.otrunk.skeleton.OTPasProject" viewClass="org.telscenter.pas.otrunk.skeleton.OTPasProjectView" />
            <OTViewEntry local_id="sound-grapher-view" viewClass="org.concord.multimedia.state.ui.OTSoundDataCollectorView" objectClass="org.concord.multimedia.state.OTSoundDataCollector" />
            <OTViewEntry local_id="mw-view" objectClass="org.concord.otrunkmw.OTModelerPage" viewClass="org.concord.otrunkmw.OTModelerPageView" />
            <OTViewEntry objectClass="org.concord.otrunk.OTIncludeRootObject" viewClass="org.concord.otrunk.OTIncludeRootObjectView" />
            <OTViewEntry local_id="moz-swing-view" objectClass="org.concord.otrunk.browser.mozswing.OTMozSwing" viewClass="org.concord.otrunk.browser.mozswing.OTMozSwingView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTModeSwitcher" viewClass="org.concord.otrunk.ui.swing.OTModeSwitcherView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTImage" viewClass="org.concord.otrunk.ui.swing.OTImageView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTModeSwitcher" viewClass="org.concord.otrunk.ui.swing.OTModeSwitcherView" />
            <OTViewEntry local_id="snapshot_button_view" objectClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButton" viewClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalSnapshotButtonView" />
            <OTViewEntry local_id="snapshot-chooser-view" objectClass="org.concord.otrunk.ui.snapshot.OTSnapshotChooser" viewClass="org.concord.otrunk.ui.snapshot.OTSnapshotChooserView" />
            <OTViewEntry local_id="journal_album_view" objectClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbum" viewClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbumView" />
            <OTDocumentViewConfig local_id="compound_doc_view" objectClass="org.concord.otrunk.view.document.OTCompoundDoc" viewClass="org.concord.otrunk.view.document.OTDocumentView">
              <cssBlocks>
                <OTCssText cssText="body { font-size: 18; FONT-STYLE: normal; FONT-FAMILY: Verdana, Arial; FONT-VARIANT: normal; TEXT-DECORATION: none }" />
              </cssBlocks>
            </OTDocumentViewConfig>
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTButton" viewClass="org.concord.otrunk.ui.swing.OTButtonView" />
            <OTViewEntry local_id="script-view" objectClass="org.concord.otrunk.script.ui.OTScriptObject" viewClass="org.concord.otrunk.script.ui.OTScriptObjectView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTButton" viewClass="org.concord.otrunk.ui.swing.OTButtonView" />
            <OTChoiceViewConfig local_id="choice-checkbox-view" objectClass="org.concord.otrunk.ui.OTChoiceMultiple" viewClass="org.concord.otrunk.ui.swing.OTChoiceCheckBoxView" useViewsAsChoices="true" />
            <OTChoiceViewConfig local_id="choice-radio-view" objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceRadioButtonView" useViewsAsChoices="true" />
            <OTViewEntry id="453a61b0-e18b-11dc-95ff-0800200c9a66" objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxView" />
            <OTViewEntry objectClass="org.concord.otrunk.script.ui.OTScriptObject" viewClass="org.concord.otrunk.script.ui.OTScriptObjectView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTCardContainer" viewClass="org.concord.otrunk.ui.swing.OTCardContainerView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTBorderContainer" viewClass="org.concord.otrunk.ui.swing.OTBorderContainerView" />
            <OTViewEntry objectClass="org.concord.otrunk.ui.OTPlacementContainer" viewClass="org.concord.otrunk.ui.swing.OTPlacementContainerView" />
            <OTViewEntry id="be713960-e18a-11dc-95ff-0800200c9a66" objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextEditView" />
            <OTViewEntry id="c93a7460-e18a-11dc-95ff-0800200c9a66" objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextView" />
            <OTViewEntry local_id="data-collector-view" viewClass="org.concord.datagraph.state.OTDataCollectorView" objectClass="org.concord.datagraph.state.OTDataCollector" />
            <OTViewEntry viewClass="org.concord.datagraph.state.OTDataGraphView" objectClass="org.concord.datagraph.state.OTDataGraph" />
            <OTViewEntry viewClass="org.concord.data.state.OTDataFieldView" objectClass="org.concord.data.state.OTDataField" />
            <OTViewEntry local_id="drawing-view" viewClass="org.concord.datagraph.state.OTDataDrawingToolView" objectClass="org.concord.graph.util.state.OTDrawingTool" />
            <OTViewEntry viewClass="org.concord.datagraph.state.OTMultiDataGraphView" objectClass="org.concord.datagraph.state.OTMultiDataGraph" />
            <OTViewEntry local_id="cck-view" objectClass="org.concord.otrunkcck.OTCCKModel" viewClass="org.concord.otrunkcck.OTCCKModelView" />
            <OTViewEntry local_id="data-table-view" objectClass="org.concord.data.state.OTDataTable" viewClass="org.concord.data.state.OTDataTableView" />
            <OTViewEntry local_id="netlogo-view" viewClass="org.concord.otrunknl4.OTNLogoModelView" objectClass="org.concord.otrunknl4.OTNLogoModel" />
            <OTViewEntry objectClass="org.concord.otrunkphet.balloons.OTPhetBalloonsModel" viewClass="org.concord.otrunkphet.balloons.OTPhetBalloonsModelView" />
            <OTViewEntry local_id="sound-player-view" objectClass="org.concord.otrunk.ui.OTSoundPlayer" viewClass="org.concord.otrunk.ui.swing.OTSoundPlayerView" />
            <OTPrototypeViewEntry id="textsize-choice-view" objectClass="org.concord.otrunk.OTSystem" viewClass="org.concord.otrunk.view.prototype.OTPrototypeView" copyPrototype="false">
              <viewEntry>
                <object refid="453a61b0-e18b-11dc-95ff-0800200c9a66" />
              </viewEntry>
              <prototype>
                <OTChoice>
                  <choices>
                    <OTOverlay id="da41a2a0-c44e-11dc-95ff-0800200c9a66" name="Small text">
                      <deltaObjectMap>
                        <entry key="23cc14f0-c44f-11dc-95ff-0800200c9a66">
                          <OTCssText src="file:/Users/geoffreykwan/dev/workspaces/vleworkspace/WISE Project Converter/src/test/css/otrunk-small-font.css" />
                        </entry>
                      </deltaObjectMap>
                    </OTOverlay>
                    <OTOverlay id="6cc8e2b0-c44e-11dc-95ff-0800200c9a66" name="Normal text" />
                    <OTOverlay id="7ba31210-c44e-11dc-95ff-0800200c9a66" name="Large text">
                      <deltaObjectMap>
                        <entry key="23cc14f0-c44f-11dc-95ff-0800200c9a66">
                          <OTCssText src="file:/Users/geoffreykwan/dev/workspaces/vleworkspace/WISE Project Converter/src/test/css/otrunk-large-font.css" />
                        </entry>
                      </deltaObjectMap>
                    </OTOverlay>
                  </choices>
                </OTChoice>
              </prototype>
              <controller>
                <OTPrototypeEventController>
                  <mapping>
                    <OTPrototypeMapEntry modelProperty="overlays[0]" prototypeProperty="currentChoice" />
                  </mapping>
                </OTPrototypeEventController>
              </controller>
            </OTPrototypeViewEntry>
            <OTPrototypeViewEntry objectClass="org.concord.otrunk.OTSystem" viewClass="org.concord.otrunk.view.prototype.OTPrototypeView" copyPrototype="false">
              <viewEntry>
                <object refid="453a61b0-e18b-11dc-95ff-0800200c9a66" />
              </viewEntry>
              <prototype>
                <OTChoice>
                  <choices>
                    <OTOverlay name="English" />
                  </choices>
                </OTChoice>
              </prototype>
              <controller>
                <OTPrototypeEventController>
                  <mapping>
                    <OTPrototypeMapEntry modelProperty="overlays[1]" prototypeProperty="currentChoice" />
                  </mapping>
                </OTPrototypeEventController>
              </controller>
            </OTPrototypeViewEntry>
            <OTViewEntry objectClass="org.concord.graph.util.state.OTDrawingTool2" viewClass="org.concord.datagraph.state.OTDataDrawingToolView" />
          </viewEntries>
          <modes>
            <OTViewMode name="authoring">
              <map>
                <entry key="be713960-e18a-11dc-95ff-0800200c9a66">
                  <OTViewEntry objectClass="org.concord.otrunk.ui.OTText" viewClass="org.concord.otrunk.ui.swing.OTTextEditEditView" />
                </entry>
                <entry key="${journal_album_view}">
                  <OTViewEntry objectClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbum" viewClass="org.telscenter.pas.otrunk.skeleton.journal.OTJournalAlbumEditView" />
                </entry>
                <entry key="${sound-grapher-view}">
                  <OTViewEntry viewClass="org.concord.multimedia.state.ui.OTSoundDataCollectorEditView" objectClass="org.concord.multimedia.state.OTSoundDataCollector" />
                </entry>
                <entry key="${moz-swing-view}">
                  <OTViewEntry objectClass="org.concord.otrunk.browser.mozswing.OTMozSwing" viewClass="org.concord.otrunk.browser.mozswing.OTMozSwingEditView" />
                </entry>
                <entry key="${choice-radio-view}">
                  <OTChoiceViewConfig objectClass="org.concord.otrunk.ui.OTChoice" viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxEditView" useViewsAsChoices="true" />
                </entry>
                <entry key="${choice-checkbox-view}">
                  <OTChoiceViewConfig objectClass="org.concord.otrunk.ui.OTChoiceMultiple" viewClass="org.concord.otrunk.ui.swing.OTChoiceComboBoxEditView" useViewsAsChoices="true" />
                </entry>
                <entry key="${data-table-view}">
                  <OTViewEntry objectClass="org.concord.data.state.OTDataTable" viewClass="org.concord.otrunk.ui.swing.OTDataTableEditView" />
                </entry>
                <entry key="${netlogo-view}">
                  <OTViewEntry viewClass="org.concord.otrunknl4.OTNLogoModelEditView" objectClass="org.concord.otrunknl4.OTNLogoModel" />
                </entry>
                <entry key="${compound_doc_view}">
                  <OTDocumentEditViewConfig objectClass="org.concord.otrunk.view.document.OTCompoundDoc" viewClass="org.concord.otrunk.view.document.edit.OTDocumentEditView">
                    <documentViewConfig>
                      <object refid="${compound_doc_view}" />
                    </documentViewConfig>
                    <objectsToInsert>
                      <OTText name="Text field" />
                      <OTDrawingTool2 name="Draw tool" />
                      <OTChoice name="Multiple-choice (single answer)" />
                      <OTChoiceMultiple name="Multiple-choice (check boxes)" />
                      <OTDataTable name="Data table" showLastRowForAddingNew="true">
                        <dataStore>
                          <OTDataStore numberChannels="2" />
                        </dataStore>
                      </OTDataTable>
                      <OTDataCollector name="Data graph" title="Data graph">
                        <source>
                          <OTDataGraphable name="Data Graph" connectPoints="true" controllable="true" yColumn="1" drawMarks="false" color="16711680" xColumn="0" lineWidth="2.0">
                            <dataStore>
                              <OTDataStore />
                            </dataStore>
                          </OTDataGraphable>
                        </source>
                        <xDataAxis>
                          <OTDataAxis max="60.0" units="s" min="0.0" label="Time" />
                        </xDataAxis>
                        <yDataAxis>
                          <OTDataAxis max="40.0" units="" min="0.0" label="" />
                        </yDataAxis>
                      </OTDataCollector>
                      <OTSoundPlayer name="Sound player" />
                      <OTSoundDataCollector name="Sound grapher" title="Data graph">
                        <source>
                          <OTDataGraphable drawMarks="false" color="255" connectPoints="true" xColumn="0" yColumn="1" name="vf" lineWidth="2.0">
                            <dataProducer>
                              <OTSoundDataProducer isFFT="false" />
                            </dataProducer>
                            <dataStore>
                              <OTDataStore />
                            </dataStore>
                          </OTDataGraphable>
                        </source>
                        <xDataAxis>
                          <OTDataAxis max="0.06" units="ms" min="0.0" label="Time" />
                        </xDataAxis>
                        <yDataAxis>
                          <OTDataAxis max="150.0" units="" min="-150.0" label="" />
                        </yDataAxis>
                      </OTSoundDataCollector>
                    </objectsToInsert>
                  </OTDocumentEditViewConfig>
                </entry>
                <entry key="${cck-view}">
                  <OTViewEntry objectClass="org.concord.otrunkcck.OTCCKModel" viewClass="org.concord.otrunkcck.OTCCKModelEditView" />
                </entry>
                <entry key="${data-collector-view}">
                  <OTDataCollectorViewConfig viewClass="org.concord.otrunk.graph.OTDataCollectorEditView" objectClass="org.concord.datagraph.state.OTDataCollector">
                    <predefinedGraphs>
                      <object refid="088786c2-8719-11dc-8314-0800200c9a66" />
                    </predefinedGraphs>
                  </OTDataCollectorViewConfig>
                </entry>
                <entry key="${drawing-view}">
                  <OTViewEntry viewClass="org.concord.otrunk.graph.OTDataDrawingToolEditView" objectClass="org.concord.graph.util.state.OTDrawingTool" />
                </entry>
                <entry key="${sound-player-view}">
                  <OTViewEntry objectClass="org.concord.otrunk.ui.OTSoundPlayer" viewClass="org.concord.otrunk.ui.swing.OTSoundPlayerEditView" />
                </entry>
                <entry key="${mw-view}">
                  <OTViewEntry objectClass="org.concord.otrunkmw.OTModelerPage" viewClass="org.concord.otrunkmw.OTModelerPageEditView" />
                </entry>
              </map>
            </OTViewMode>
          </modes>
        </OTViewBundle>
        <OTSharingBundle />
      </bundles>
      <root>
        <OTPasProject id="971534ac-3f22-11dd-b240-cde0bfdd2411" title="Using Conditionals: Part 3 -- Virtual Pet" isAuthoringMode="false">
          <journalAlbum>
            <OTJournalAlbum id="4db44b59-5cff-11dd-a4b6-9b08a7b15b3c">
              <entries>
                <OTJournalPage title="Journal Page 1" studentPage="false" creationTime="Aug 22 at 1:07" notes="Add a note describing this journalPage...">
                  <parts>
                    <OTCompoundDoc>
                      <documentRefs>
                        <OTText id="9305318c-7303-11dd-b0b7-63524403b921" name="Text field" rows="2" />
                      </documentRefs>
                      <bodyText>
                        Hi I am a Journal 1.
                        <br />
                        <br />
                        <object refid="9305318c-7303-11dd-b0b7-63524403b921" />
                        <br />
                      </bodyText>
                    </OTCompoundDoc>
                    <OTCompoundDoc>
                      <documentRefs>
                        <OTText id="9305318d-7303-11dd-b0b7-63524403b921" name="Text field" rows="2" />
                      </documentRefs>
                      <bodyText>
                        Hi I am an answer to a part 2.
                        <br />
                        <br />
                        <object refid="9305318d-7303-11dd-b0b7-63524403b921" />
                        <br />
                      </bodyText>
                    </OTCompoundDoc>
                  </parts>
                </OTJournalPage>
              </entries>
            </OTJournalAlbum>
          </journalAlbum>
          <activityList>           
            <OTPasActivity id="108577c9-ffa2-11dd-b2c3-7bd89c45bea2" title="Introduction" authorNotes="">
              <stepList>
<OTIntroPage id="a1s1" title="Objectives" authorNotes="" hoverString="Pas Step" speechText="">
                  <nodeaudios>
                     <nodeaudio id="400cb73e-c098-11dd-a66e-audio1" elementId="audio2" url="assets/audio/a1s1_1.mp3" />                  
                     <nodeaudio id="400cb73e-c098-11dd-a66e-audio2" elementId="audio3" url="assets/audio/a1s1_2.mp3" />
                     <nodeaudio id="400cb73e-c098-11dd-a66e-audio3" elementId="audio4" url="assets/audio/a1s1_3.mp3" />                  
                     <nodeaudio id="400cb73e-c098-11dd-a66e-audio4" elementId="audio5" url="assets/audio/a1s1_4.mp3" />
                  </nodeaudios>
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>
<body>

<div class="header" id="audio1">Objectives</div>

  <div class="bubbleBox">
    <div class="bubbleDivLeft">
      <div class="blue speech talkLeft"> <img src="art/robots/short_right.png" />
        <div>
          <p id="audio2">Welcome back! Thanks again for helping me stamp out those bugs in the last section.  You're the best.</p>
          <p id="audio3">So, Constance, what's on the plate for today?</p>
        </div>
      </div>
    </div>
  </div>

  <div id="bubbleSeparator220"></div> 
  
  <div class="bubbleBox">
    <div class="bubbleDivRight">
      <div class="green speech talkRight"> <img src="art/robots/tall_right.png" />
        <div>
          <div id="audio4">
          <p>Here's our objectives for this section, Bolt.</p>
          <ul>
           <li>Review what we've learned about conditionals so far.</li>
           <li>Begin our work on the "Virtual Pet" program.</li>
           <li>Help a Constructor bot write and debug her virtual pet.</li>          
          </ul>
          </div>
          <p id="audio5">Let's get started!</p>
          </div>
      </div>
    </div>
  </div>

</body>
</html>                  
]]></content>
                </OTIntroPage>
<OTFillin id="a1s2" title="Complete &lt;tt&gt;studentGrade&lt;/tt&gt;">
                  <nodeaudios>
                     <nodeaudio id="audio-a1s2" url="assets/audio/a1s2.mp3" />                  
                  </nodeaudios>
					<jaxbXML><![CDATA[
						<assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"

   xsi:schemaLocation="http://www.imsglobal.org/xsd/imsqti_v2p0 imsqti_v2p0.xsd"
   identifier="textEntry" title="Dido" adaptive="false" timeDependent="false">

   <responseDeclaration identifier="response_0" cardinality="single" baseType="string">
       <correctResponse>
           <value>&lt; 50</value>
       </correctResponse>

       <mapping defaultValue="0">
           <mapEntry mapKey="&lt; 50" mappedValue="1"/>
   <mapEntry mapKey="&lt;50" mappedValue="1"/>
           <mapEntry mapKey="&lt;= 49" mappedValue="1"/>
           <mapEntry mapKey="&lt;=49" mappedValue="1"/>

       </mapping>
   </responseDeclaration>

   <responseDeclaration identifier="response_1" cardinality="single" baseType="string">
       <correctResponse>
           <value>&gt; 80</value>
       </correctResponse>

       <mapping defaultValue="0">
   <mapEntry mapKey="&gt; 80" mappedValue="1"/>
           <mapEntry mapKey="&gt;80" mappedValue="1"/>
   <mapEntry mapKey="&gt;= 81" mappedValue="1"/>
           <mapEntry mapKey="&gt;=81" mappedValue="1"/>
       </mapping>
   </responseDeclaration>


   <outcomeDeclaration identifier="SCORE" cardinality="single" baseType="float"/>
   <itemBody>
       <htmltext>
&lt;blockquote&gt;
Complete a function &lt;tt&gt;studentGrade&lt;/tt&gt; that takes in a score between 0 and 100 and returns the string:

&lt;ul&gt;
&lt;li&gt;&lt;tt&gt;fail&lt;/tt&gt;, if the score is less than 50,
&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;pass&lt;/tt&gt;, if the score is between or equal to 50 and 80,
&lt;/li&gt;
&lt;li&gt;&lt;tt&gt;excellent&lt;/tt&gt;, if the score is greater than 80.
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;

&lt;tt&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;public &lt;span class="redtext"&gt;String&lt;/span&gt; studentGrade(&lt;span class="redtext" &gt;int&lt;/span&gt; score) { &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ( score
&lt;/tt&gt;

</htmltext>
       <textEntryInteraction responseIdentifier="response_0" expectedLength="10"/>
       <htmltext>
&lt;tt&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;) { &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return(&lt;span class="greentext"&gt;"fail"&lt;/span&gt;); &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else if ( score
&lt;/tt&gt;
</htmltext>
       <textEntryInteraction responseIdentifier="response_1" expectedLength="5"/>
       <htmltext>
&lt;tt&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;) { &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (&lt;span class="greentext"&gt;"excellent"&lt;/span&gt;); &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} else { &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;return (&lt;span class="greentext"&gt;"pass"&lt;/span&gt;); &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &lt;br&gt;
&amp;nbsp;&amp;nbsp;&amp;nbsp;} &lt;br&gt;
&lt;/tt&gt;
</htmltext>
   </itemBody>
   <responseProcessing template="http://www.imsglobal.org/question/qti_v2p0/rptemplates/map_response"/>

</assessmentItem>
					]]></jaxbXML>
				</OTFillin> 
                </stepList>
            </OTPasActivity>
            <OTPasActivity id="af231e8c-0210-11de-9062-13382964bfbf" title="Explore New Ideas" authorNotes="">
              <stepList>			              
                <OTIntroPage id="a2s1" title="Introduction to Virtual Pets">
                  <nodeaudios>
                     <nodeaudio id="audio-a2s1_1" elementId="audio1" url="assets/audio/a2s1_1.mp3" />                  
                     <nodeaudio id="audio-a2s1_2" elementId="audio2" url="assets/audio/a2s1_2.mp3" />                  
                     <nodeaudio id="audio-a2s1_3" elementId="audio3" url="assets/audio/a2s1_3.mp3" />                  
                     <nodeaudio id="audio-a2s1_4" elementId="audio4" url="assets/audio/a2s1_4.mp3" />                  
                     <nodeaudio id="audio-a2s1_5" elementId="audio5" url="assets/audio/a2s1_5.mp3" />                  
                  </nodeaudios>
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>

<body>

<div id="audio1" class="header">Introduction to the Virtual Pet</div>

<div id="marginCol">

	<div class="warning top125">
			<p>Don't forget to save your work as you progress through each Section.  Select "Save" from the <i>Course Menu</i>.</p>
    </div>
	<div class="vocab top50">
			<a href="page/glossary.php?term=Virtual%20Pet" target="_blank">Virtual Pet</a>			
    </div>
</div>

<div id="mainCol">

<p id="audio2"> Now it's time to put your knowledge of conditionals into practice.  For the next few days, you'll
work on the <span class="vocab">Virtual Pet</span> mini-project.
</p>

<img class="imageRight" src="art/robots/cam_working.png" width="160px"  />

<p id="audio3">Constructor bots like toys just as much as humans.  One of their favorite toys is a handheld electronic device within which a virtual pet "lives". This pet has <em>moods</em>, such as happiness or pain, and shows these mood through an image and a message on a screen.  The owner of the toy can make the pet <em>behave</em> in certain ways.  And, often, when the pet does something, its mood changes.
</p>

<img class="imageLeft" src="art/robots/cam.png" width="168px" />

<p id="audio4">Cam is a young Constructor bot, fresh off the assembly line.  So, like you, she's just learning to program in Java.  Cam will be writing a Java program that acts like a fully working Virtual Pet toy &mdash one inside a computer.  The toy will be better than any she can buy, though, because she gets to customize the actions and reactions of the virtual pet.
</p>


<img class="imageRight" src="art/robots/cam_virtualpet.png" width="150px" />


<div id="audio5" class="redFlag right">Warning: virtual pets can get mischievous!</div>

</div>

</body>
</html>  
                  ]]></content>
                  </OTIntroPage>
                <OTBlueJ id="a2s2" title="Open Cam's BlueJ Project" authorNotes="" hoverString="Pas Step" speechText="BlueJ Step.">
                  <nodeaudios>
                     <nodeaudio id="audio-a2s2_1" elementId="audio1" url="assets/audio/a2s2_1.mp3" />                  
                     <nodeaudio id="audio-a2s2_2" elementId="audio2" url="assets/audio/a2s2_2.mp3" />                  
                     <nodeaudio id="audio-a2s2_3" elementId="audio3" url="assets/audio/a2s2_3.mp3" />                  
                     <nodeaudio id="audio-a2s2_4" elementId="audio4" url="assets/audio/a2s2_4.mp3" />                  
                     <nodeaudio id="audio-a2s2_5" elementId="audio5" url="assets/audio/a2s2_5.mp3" />                  
                     <nodeaudio id="audio-a2s2_6" elementId="audio6" url="assets/audio/a2s2_6.mp3" />                  
                     <nodeaudio id="audio-a2s2_7" elementId="audio7" url="assets/audio/a2s2_7.mp3" />                  
                     <nodeaudio id="audio-a2s2_8" elementId="audio8" url="assets/audio/a2s2_8.mp3" />                  
                  </nodeaudios>
                  <content><![CDATA[
                  <html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Launch Cam's BlueJ Project</div>

<div id="marginCol">

        <div class="help top100">
			<p>Help Guide:</p>
            <a href="page/help.php?topic=invoking%20behaviors" target="_blank">invoking behaviors</a>		
            <a href="page/help.php?topic=opening%20bluej%20project" target="_blank">opening a BlueJ project</a>	
        </div>
        
		<div class="vocab top100">
			<a href="page/glossary.php?term=object%20bench" target="_blank">object bench</a>			
        </div>
        

</div>

<div id="mainCol">

    <p class="width90" id="audio2">Let's use BlueJ to open Cam's first attempt at writing a Virtual Pet toy, and take a look at 
    what she did.</p>
    
    <div class="openbluejproj">
        <p id="audio3">Open this project in BlueJ: <tt>"cam-v1"</tt> (in BlueJ, go to <b>Tools>Open Current BlueJ Project</b> to have BlueJ automatically open this project for you)<a href="page/help.php?topic=opening%20bluej%20project" target="_blank" class="instructionsIcon">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</a> </p>
    </div>
    
    <p class="width90" id="audio4">As you can see, there is a single class, named <tt>VirtualPet</tt>. 
    Each object of this class represents a virtual pet toy.</p>
    
    <div class="tryit" id="audio5">Make a <tt>VirtualPet</tt> object now, using the <span class="vocab">object bench</span> in the usual way.  You can name it anything you like.</div>
    
    <p class="width90"id="audio6">A window will open, containing an image that represents the mood of the Virtual Pet you just made.  
    Cam has programmed the Virtual Pet to show a "normal" mood at the start.</p>
    
    <p class="width90" id="audio7">The virtual pet has behaviors that you can invoke in the usual way. <a href="page/help.php?topic=invoking%20behaviors" target="_blank" 
    class="instructionsIcon">&nbsp;&nbsp;&nbsp;&nbsp;</a><br> 
    You'll see the methods "feed", "exercise", and "sleep".</p>
    
    <div class="tryit" id="audio8">Invoke all three methods on your <tt>VirtualPet</tt> object.  See what happens!</div>

</div>

</body>
</html>
                  ]]></content>
                  <projectPath>/cam-v1</projectPath>
                  <url>http://uccpdev.berkeley.edu:10080/uccp-assets/curriculum/POC/a2s2.html</url>
                </OTBlueJ>
				<OTIntroPage id="a2s3" title="Explore the Code 1">
  				  <nodeaudios>
                     <nodeaudio id="audio-a2s3_1" elementId="audio1" url="assets/audio/a2s3_1.mp3" />                  
                     <nodeaudio id="audio-a2s3_2" elementId="audio2" url="assets/audio/a2s3_2.mp3" />                  
                     <nodeaudio id="audio-a2s3_3" elementId="audio3" url="assets/audio/a2s3_3.mp3" />                  
                     <nodeaudio id="audio-a2s3_4" elementId="audio4" url="assets/audio/a2s3_4.mp3" />                  
                     <nodeaudio id="audio-a2s3_5" elementId="audio5" url="assets/audio/a2s3_5.mp3" />                  
                     <nodeaudio id="audio-a2s3_6" elementId="audio6" url="assets/audio/a2s3_6.mp3" />                  
                  </nodeaudios>               
                    <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />


<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Explore the Code 1</div>

<p id="audio2">Now, let's look at the Java code that Cam wrote.</p><br>

<div class="tryit" id="audio3">Open the editor for <tt>VirtualPet</tt> class, and examine the code. </div>

<br><br><br>

<div class="bubbleBox">
    <div class="bubbleDivRight">
      <div class="green speech talkRight"> <img src="art/robots/cam_left.png" />
        <div>
          <p class="bubbleHeader" id="audio4">Tip 1 of 4</p>
          <p id="audio5">The <em>comment</em> at the top of the code shows the version and the author.  We are going to be looking at several versions of my sample code, adding functionality and debugging the results.</p>
          <p id="audio6"> You should always write a concise comment for each version of your code -- to help you keep track of your changes over time.</p>
        </div>
      </div>
    </div>
</div>


</body>
</html>
]]></content>
				</OTIntroPage>
                <OTIntroPage id="a2s4" title="Explore the Code 2">
  				  <nodeaudios>
                     <nodeaudio id="audio-a2s4_1" elementId="audio1" url="assets/audio/a2s4_1.mp3" />                  
                     <nodeaudio id="audio-a2s4_4" elementId="audio4" url="assets/audio/a2s4_4.mp3" />                  
                     <nodeaudio id="audio-a2s4_5" elementId="audio5" url="assets/audio/a2s4_5.mp3" />                  
                  </nodeaudios>                      <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />


<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Explore the Code 2</div>	

<div id="marginCol">

		<div class="vocab top300">
			<a href="page/glossary.php?term=instance%20variable" target="_blank">instance variable</a>			
		
        </div>
</div>


<div id="mainCol">
		<p id="audio2">Now, let's look at the Java code that Cam wrote.</p><br>

		<div class="tryit" id="audio3">Open the editor for <tt>VirtualPet</tt> class, and examine the code. </div>

		<br><br>

		<div class="bubbleBox">
    		<div class="bubbleDivLeft">
    		  <div class="blue speech talkLeft"> <img src="art/robots/tall_help.png"/>
   		      <div>
       		    	<p id="audio4" class="bubbleHeader">Tip 2 of 4</p>
         			<p id="audio5">The first <span class="vocab">instance variable</span> uses the special class <tt>VirtualPetFace</tt> that was prewritten for Cam and you.  It takes care of the images, the messages, and so forth; its details aren't important. What's more important is <em>how</em> classes are controlled.  We'll cover that in the next step.</p>
        	  	</div>
      		  </div>
   	      </div>
  		</div>
</div>

	

</body>
</html>                    
    				]]></content>    				
				</OTIntroPage>
                <OTIntroPage id="a2s5" title="Explore the Code 3">
  				  <nodeaudios>
                     <nodeaudio id="audio-a2s5_1" elementId="audio1" url="assets/audio/a2s5_1.mp3" />                  
                     <nodeaudio id="audio-a2s5_4" elementId="audio4" url="assets/audio/a2s5_4.mp3" />                  
                     <nodeaudio id="audio-a2s5_5" elementId="audio5" url="assets/audio/a2s5_5.mp3" />                  
                  </nodeaudios>                 
                    <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Explore the Code 3</div>

<div id="marginCol">

		<div class="vocab top300">
			<a href="page/glossary.php?term=constructor" target="_blank">constructor</a>			
			<a href="page/glossary.php?term=string" target="_blank">string</a>			
			<a href="page/glossary.php?term=argument" target="_blank">argument</a>			
	
        </div>
</div>

<div id="mainCol">
 
<p id="audio2">Now, let's look at the Java code that Cam wrote.</p><br>

<div class="tryit" id="audio3">Open the editor for the <tt>VirtualPet</tt> class, and examine 
the code. </div>

<br><br><br>

<div class="bubbleBox">
    <div class="bubbleDivRight">
      <div class="green speech talkRight"> <img src="art/robots/short_left.png" />
        <div id="objectivesText">
          <p class="bubbleHeader" id="audio4">Tip 3 of 4</p>
          <p id="audio5">You can see the <span class="vocab">constructor</span> and the three methods that you explored: <tt>feed</tt>, <tt>exercise</tt>, and <tt>sleep</tt>.  Look at how the methods set the message and the image for the virtual pet: they use the <tt>VirtualPetFace</tt> object (stored in the <tt>face</tt> instance variable) to call the methods <tt>setMessage</tt> and <tt>setImage</tt>.  Each of those takes a <span class="vocab">string</span> as its <span class="vocab">argument</span>.
</p>
        </div>
      </div>
    </div>
  </div>
  

</div>

</body>
</html>
    				]]></content>
    			</OTIntroPage>
                <OTIntroPage id="a2s6" title="Explore the Code 4">
  				  <nodeaudios>
                     <nodeaudio id="audio-a2s6_1" elementId="audio1" url="assets/audio/a2s6_1.mp3" />                  
                     <nodeaudio id="audio-a2s6_4" elementId="audio4" url="assets/audio/a2s6_4.mp3" />                  
                     <nodeaudio id="audio-a2s6_5" elementId="audio5" url="assets/audio/a2s6_5.mp3" />                  
                  </nodeaudios>                 
                    <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />


<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Explore the Code 4</div>

<p>Now, let's look at the Java code that Cam wrote.</p>

<div class="tryit">Open the editor for <tt>VirtualPet</tt> class, and examine the code. </div>

<br><br><br>

<div class="bubbleBox">
    <div class="bubbleDivLeft">
      <div class="red speech talkLeft"> <img src="art/robots/tall_right.png" />
        <div id="objectivesText">
          <p class="bubbleHeader" id="audio4">Tip 4 of 4</p>
          <p class="center" id="audio5">The second instance variable, <tt>hunger</tt>, represents how hungry the pet is.  Each of the methods has some effect on it.  We'll look more closely at it in a bit.  </p>
        </div>
      </div>
  </div>
  </div>
  

</body>
</html>    				]]></content>
    			</OTIntroPage>
              </stepList>
            </OTPasActivity>
            <OTPasActivity id="ea2774f5-0210-11de-9062-13382964bfbf" title="Programming" authorNotes="">
              <stepList>
                <OTIntroPage id="a3s1" title="Make a Quick Fix">
  				  <nodeaudios>
                     <nodeaudio id="audio-a3s1_1" elementId="audio1" url="assets/audio/a3s1_1.mp3" />                  
                     <nodeaudio id="audio-a3s1_2" elementId="audio2" url="assets/audio/a3s1_2.mp3" />                  
                  </nodeaudios>                 
                  <nodeaudios>
                     <nodeaudio id="audio-a3s1" url="assets/audio/a3s1.mp3" />                  
                  </nodeaudios>
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Make a Quick Fix</div>

<br>

<img class="marginleft100" src="art/robots/cam_coding.png" width="200px" /><img class="marginleft50" src="art/pets/male1/pet_asleep_2.jpg" width="200px" /> 

<br>
<br>

<div class="tryit" id="audio2">You may have noticed that Cam's pet doesn't say anything when it sleeps.  Add a Java statement so the pet gives an appropriate message (e.g., "zzzzzzz") when it is told to sleep.  Make sure to test your code!</div>


</body>
</html>
                  ]]></content>
                </OTIntroPage>
                <OTQuiz id="a3s2" title="How Does Hunger Work?" authorNotes="" hoverString="Pas Step" speechText="" isInjectPrompt="false" lockStudentAnswers="true" randomChoiceOrder="false">
                  <nodeaudios>
                     <nodeaudio id="audio-a3s2" url="assets/audio/a3s2.mp3" />                  
                  </nodeaudios>
                  <jaxbXML><![CDATA[
                    <assessmentItem xmlns="http://www.imsglobal.org/xsd/imsqti_v2p0" xmlns:ns3="http://www.w3.org/1998/Math/MathML" xmlns:ns2="http://www.w3.org/1999/xlink" timeDependent="false" adaptive="false">
                      <responseDeclaration identifier="CHOICE_SELF_CHECK_ID">
                        <correctResponse interpretation="choice 3" />
                      </responseDeclaration>
                      <itemBody>
                        <choiceInteraction hasInlineFeedback="true" responseIdentifier="CHOICE_SELF_CHECK_ID" maxChoices="1" shuffle="false">
                          <prompt>&lt;html&gt;&lt;body&gt;
&lt;p&gt;What would the value of the virtual pet's &lt;tt&gt;hunger&lt;/tt&gt;
variable be if, immediately after the pet was created, she invoked
the following behaviors in order:&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Sleep&lt;/li&gt;
&lt;li&gt;Feed&lt;/li&gt;
&lt;li&gt;Feed&lt;/li&gt;
&lt;li&gt;Exercise&lt;/li&gt;
&lt;li&gt;Sleep&lt;/li&gt;
&lt;li&gt;Exercise&lt;/li&gt;
&lt;/ol&gt;
&lt;/body&gt;&lt;/html&gt;</prompt>
                          <simpleChoice fixed="true" identifier="choice 1"><feedbackInline identifier="choice 1" showHide="show" >&lt;br&gt;Nope. The first statement after each method changes the hunger variable.</feedbackInline>0</simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 2"><feedbackInline identifier="choice 2" showHide="show" >&lt;br&gt;Nope. In the class, the first statement in the exercise and sleep methods changes the hunger variable by adding something to it, not by setting its value directly.</feedbackInline>3</simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 3"><feedbackInline identifier="choice 3" showHide="show" >&lt;br&gt;Yes!</feedbackInline>7</simpleChoice>
                          <simpleChoice fixed="true" identifier="choice 4"><feedbackInline identifier="choice 4" showHide="show" >&lt;br&gt;Nope. Remember, when the feed behavior is invoked, hunger either gets set to 0 or is reduced by 10.</feedbackInline>8</simpleChoice>
                          <simpleChoice fixed="true" identifier="SIMPLE_CHOICE_ID5"><feedbackInline identifier="SIMPLE_CHOICE_ID5" >&lt;br&gt;No, we really can know this exactly. There is no randomness involved: the methods do specific things to the hunger variable.</feedbackInline>We cannot know.</simpleChoice>
                        </choiceInteraction>
                      </itemBody>
                    </assessmentItem>
                  ]]></jaxbXML>
                  <introductionHtml>&lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"&gt;
&lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
&lt;head&gt;
&lt;meta name="generator"
content="HTML Tidy for Java (vers. 26 Sep 2004), see www.w3.org" /&gt;
&lt;title&gt;&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;p&gt;There is a second instance variable in Cam's code:. Cam is using
the &lt;tt&gt;hunger&lt;/tt&gt; instance variable to keep track of how hungry
the pet is at any particular time. Some behaviors increase the
value of &lt;tt&gt;hunger&lt;/tt&gt;. That is, make the pet get hungrier.&lt;/p&gt;
&lt;/body&gt;
&lt;/html&gt;</introductionHtml>
                </OTQuiz>
				<OTFillin id="a3s3" title="Fill in the Blank">
                  <nodeaudios>
                     <nodeaudio id="audio-a3s3" url="assets/audio/a3s3.mp3" />                  
                  </nodeaudios>
					<jaxbXML><![CDATA[
						<assessmentItem xmlns='http://www.imsglobal.org/xsd/imsqti_v2p0' xmlns:xsi='http://www.w3.org/2001/XMLSchema-instance' xsi:schemaLocation='http://www.imsglobal.org/xsd/imsqti_v2p0 imsqti_v2p0.xsd' identifier='textEntry' title='Dido' adaptive='false' timeDependent='false'>
							<responseDeclaration identifier='response_0' cardinality='single' baseType='string'>
								<correctResponse>
									<value>hunger &lt; 0</value>
								</correctResponse>
								<mapping defaultValue='0'>
									<mapEntry mapKey='hunger &lt; 0' mappedValue='1'/>
									<mapEntry mapKey='hunger&lt;0' mappedValue='1'/>
									<mapEntry mapKey='hunger &lt;= 0' mappedValue='1'/>
									<mapEntry mapKey='hunger&lt;=0' mappedValue='1'/>
								</mapping>
							</responseDeclaration>
							<outcomeDeclaration identifier='SCORE' cardinality='single' baseType='float'/>
							<itemBody>
								<htmltext>&lt;p&gt;Fill in the blank in the code below so that the rewritten &lt;tt&gt;feed&lt;/tt&gt; method has exactly the same effect on &lt;tt&gt;hunger&lt;/tt&gt; as the original.&lt;/p&gt;&lt;code&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;public &lt;span class='redtext'&gt;void&lt;/span&gt; feed ( ) { &lt;br&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;hunger = hunger - 10; &lt;br&gt;  &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;if ( </htmltext><textEntryInteraction responseIdentifier='response_0' expectedLength='15'/><htmltext>  ) {    &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &amp;nbsp;&amp;nbsp;&amp;nbsp;hunger = 0; &lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;}&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setMessage('Yum, thanks');&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;face.setImage('normal'); &lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;} &lt;br&gt;&lt;/code&gt;
								</htmltext>
							</itemBody>
							<responseProcessing template='http://www.imsglobal.org/question/qti_v2p0/rptemplates/map_response'/>
						</assessmentItem>
						]]></jaxbXML>
				</OTFillin>                
                <OTIntroPage id="a3s4" title="Making Hunger Realistic 1">
  				  <nodeaudios>
                     <nodeaudio id="audio-a3s4_1" elementId="audio1" url="assets/audio/a3s4_1.mp3" />                  
                     <nodeaudio id="audio-a3s4_2" elementId="audio2" url="assets/audio/a3s4_2.mp3" />                  
                     <nodeaudio id="audio-a3s4_3" elementId="audio3" url="assets/audio/a3s4_3.mp3" />                  
                     <nodeaudio id="audio-a3s4_4" elementId="audio4" url="assets/audio/a3s4_4.mp3" />                  
                     <nodeaudio id="audio-a3s4_5" elementId="audio5" url="assets/audio/a3s4_5.mp3" />                  
                     <nodeaudio id="audio-a3s4_6" elementId="audio6" url="assets/audio/a3s4_6.mp3" />                  
                  </nodeaudios>                 
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />


<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Making Hunger Realistic 1</div>

<div id="marginCol">
		<div class="help top100">
			<p>Help Guide:</p>
            <a href="page/help.php?topic=donwloading%20the%20course%20bluej%20projects" target="_blank">downloading BlueJ course resources</a>		
        </div>
</div>

<div id="mainCol">

<div class="centeredImages">
		<img class="imageCenter imageLeft" src="art/pets/male1/pet_hungry_1.jpg" width="60px" />  
		<img class="imageCenter imageLeft" src="art/pets/male1/pet_dead_2.jpg" width="60px" />  
</div>
<p id="audio2">Let's help Cam make her virtual pet a little more interesting.  Obviously, it isn't realistic that 
a pet could get hungrier and hungrier forever.  At some point the pet should, well, perish.
</p>

<p class="tryit" id="audio3">Add code so that, if the pet's <tt>hunger</tt> variable goes over <tt>12</tt>, it dies.
</p>

<br><br><br>

<div class="bubbleBox">
    <div class="bubbleDivLeft">
      <div class="red speech talkLeft"> <img src="art/robots/cam_help.png" />
        <div>
            <p class="bubbleHeader" id="audio4">Tip 1 of 3</p>
			<p id="audio5">How do I make a pet dead with a Java statement?</p>
        </div>
      </div>
    </div>
  </div>

<br><br><br><br><br><br><br>
  
  <div class="bubbleBox">
    <div class="bubbleDivRight">
      <div class="blue speech talkRight"> <img src="art/robots/short_help.png" />
        <div>
          <p id="audio6">Answer: Being "dead" is just another mood for the Virtual Pet.  
          You can't just type in any mood name, however; we've only provided initial images for some moods.  
          The moods "dead", "skeleton", and "pushingdaisies" will work fine, however. </p>
        </div>
      </div>
    </div>
  </div>

</div>

</body>
</html>
                  ]]></content>
                </OTIntroPage>
				<OTIntroPage id="a3s5" title="Making Hunger Realistic 2">
  				  <nodeaudios>
                     <nodeaudio id="audio-a3s5_1" elementId="audio1" url="assets/audio/a3s5_1.mp3" />                  
                     <nodeaudio id="audio-a3s5_2" elementId="audio2" url="assets/audio/a3s5_2.mp3" />                  
                     <nodeaudio id="audio-a3s5_3" elementId="audio3" url="assets/audio/a3s5_3.mp3" />                  
                     <nodeaudio id="audio-a3s5_4" elementId="audio4" url="assets/audio/a3s5_4.mp3" />                  
                  </nodeaudios> 				
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Making Hunger Realistic 2</div>

<br><br>

<div class="bubbleBox">
    <div class="bubbleDivLeft">
      <div class="red speech talkLeft"> <img src="art/robots/cam_stumped.png" />
        <div>
          <p class="bubbleHeader" id="audio2">Tip 2 of 3</p>
          <p id="audio3">Where should I put Java code to check whether <tt>hunger</tt> has gone above <tt>12</tt>?</p>
        </div>
      </div>
    </div>
  </div>

<br><br><br><br><br><br><br><br>
  
  <div class="bubbleBox">
    <div class="bubbleDivRight">
      <div class="green speech talkRight"> <img src="art/robots/short_left.png" />
        <div>
          <p id="audio4">Answer: Think about what is easiest to do and will be simplest to read.  A good first thought is wherever the mood image gets set.  Another thought is only in places where the <tt>hunger</tt> variable gets changed.</p>
        </div>
      </div>
    </div>
  </div>

</body>
</html>
                  ]]></content>
                </OTIntroPage>
                <OTIntroPage id="a3s6" title="Making Hunger Realistic 3">
				  <nodeaudios>
                     <nodeaudio id="audio-a3s6_1" elementId="audio1" url="assets/audio/a3s6_1.mp3" />                  
                     <nodeaudio id="audio-a3s6_2" elementId="audio2" url="assets/audio/a3s6_2.mp3" />                  
                     <nodeaudio id="audio-a3s6_3" elementId="audio3" url="assets/audio/a3s6_3.mp3" />                  
                     <nodeaudio id="audio-a3s6_4" elementId="audio4" url="assets/audio/a3s6_4.mp3" />                  
                  </nodeaudios>
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />


<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Making Hunger Realistic 3</div>

<br><br>

<div class="bubbleBox">
    <div class="bubbleDivLeft">
      <div class="red speech talkLeft"> <img src="art/robots/cam_thinking.png" />
        <div>
          <p class="bubbleHeader" id="audio2">Tip 3 of 3</p>
          <p id="audio3">If death is just a mood, then won't behaviors invoked later change the mood, and bring the pet back to life?</p>
        </div>
      </div>
    </div>
  </div>

<br><br><br><br><br><br><br><br>
  
  <div class="bubbleBox">
    <div class="bubbleDivRight">
      <div class="blue speech talkRight"> <img src="art/robots/tall_right.png" />
        <div>
          <p id="audio4">Answer: Well... yes.  You don't need to worry about that for now, but you might think about how you would fix that.</p>
        </div>
      </div>
    </div>
  </div>

</body>
</html>
                  ]]></content>
				</OTIntroPage>
              </stepList>
            </OTPasActivity>
<OTPasActivity id="c0e6d94f-0210-11de-9062-13382964bfbf" title="Connect Ideas" authorNotes="">
              <stepList>
                                <OutsideUrl id="623bf42b-5db6-11dd-ace9-3f6ab6d7651c" title="Is there a better way to die?">
                	<nodeaudios>                	
                     <nodeaudio id="audio-a4s1" url="assets/audio/a4s1.mp3" />                  
                    </nodeaudios>
					<url>http://uccpdev.berkeley.edu:10088/webapp/student/brainstorm/studentbrainstorm.html?brainstormId=42</url>
				</OutsideUrl>
	<OTBlueJ id="a4s2" title="Squash the Bugs" authorNotes="" hoverString="Pas Step" speechText="BlueJ Step.">
                	<nodeaudios>
                     <nodeaudio id="audio-a4s2_1" elementId="audio1" url="assets/audio/a4s2_1.mp3" />                  
                     <nodeaudio id="audio-a4s2_2" elementId="audio2" url="assets/audio/a4s2_2.mp3" />                  
                     <nodeaudio id="audio-a4s2_3" elementId="audio3" url="assets/audio/a4s2_3.mp3" />                  
                     <nodeaudio id="audio-a4s2_4" elementId="audio4" url="assets/audio/a4s2_4.mp3" />                  
                     <nodeaudio id="audio-a4s2_5" elementId="audio5" url="assets/audio/a4s2_5.mp3" />                  
                     <nodeaudio id="audio-a4s2_6" elementId="audio6" url="assets/audio/a4s2_6.mp3" />                  
                     <nodeaudio id="audio-a4s2_7" elementId="audio7" url="assets/audio/a4s2_7.mp3" />                  
                     <nodeaudio id="audio-a4s2_8" elementId="audio8" url="assets/audio/a4s2_8.mp3" />                  
                     <nodeaudio id="audio-a4s2_9" elementId="audio9" url="assets/audio/a4s2_9.mp3" />                  
                    </nodeaudios>
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />

<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Squash the Bugs (Representing 'Tiredness')</div>

<div id="marginCol">

    <div class="help top150">
        <p>Help Guide:</p>
        <a href="page/help.php?topic=inspecting%20an%20object" target="_blank">how to inspect an object</a>		
    </div>

	<div class="vocab top75">
			<a href="page/glossary.php?term=compile" target="_blank">compile</a>					
	</div>
</div>

<div id="mainCol">

    <p id="audio2">To make things more entertaining, Cam  added "tiredness" to her Virtual Pet. &nbsp; Her idea was to add a
    new instance variable, naming it <tt>tiredness</tt>, and adding Java statements to the behaviors so
    that the value of <tt>tiredness</tt> is changed. &nbsp;Things, however, aren't working quite right.  In fact, she can't even get her code to <span class="vocab">compile</span>!</p>
    
    <div class="openbluejproj">
        <p id="audio3">Open this project in BlueJ: <tt>"cam-v2"</tt> (in BlueJ, go to <b>Tools>Open Current BlueJ Project</b> to have BlueJ automatically open this project for you) &nbsp;Then fix Cam's code.</p>
    </div>
    
    <p id="audio4">You'll need to make sure of a few points:</p>
    
    <ul>
    <li id="audio5">Confirm that the code compiles! 
    </li>
    <li id="audio6">If <tt>tiredness</tt> ever goes above <tt>15</tt>, the pet should be set to the "asleep" mood. 
    </li>
    <li id="audio7">The <tt>sleep</tt> behavior should always reset <tt>tiredness</tt>, while <tt>exercise</tt> and <tt>feed</tt> add <tt>5</tt> and <tt>2</tt> to <tt>tiredness</tt> respectively.
    </li>
    <li id="audio8">If the pet is both dead (<tt>hunger</tt> over <tt>12</tt>) and asleep (<tt>tiredness</tt> over <tt>15</tt>) then the pet should die.  That is, death takes precedence over falling asleep!
    </li>
    </ul>
    
    <p id="audio9">Don't forget that <span class="vocab">inspecting an object</span> is a useful way of checking on the values of its instance variables.</p>

</div>



</body>
</html>
                  ]]></content>
                  <projectPath>/cam-v2</projectPath>
                  <url>http://uccpdev.berkeley.edu:10080/uccp-assets/curriculum/POC/a4s2.html</url>
                </OTBlueJ>		
				<OutsideUrl id="623bf42b-5db6-11dd-ace9-3f6ab6d765dd" title="Thinking Ahead...">
                	<nodeaudios>
                     <nodeaudio id="audio-a4s3" url="assets/audio/a4s3.mp3" />                  
                    </nodeaudios>
					<url>http://uccpdev.berkeley.edu:10088/webapp/student/brainstorm/studentbrainstorm.html?brainstormId=43</url>
				</OutsideUrl>				
              </stepList>
            </OTPasActivity>            
           <OTPasActivity id="cf0de551-0210-11de-9062-13382964bfbf" title="Summary" authorNotes="">
              <stepList>
                <OTIntroPage id="a5s1" title="Section Summary">
                	<nodeaudios>
                     <nodeaudio id="audio-a5s1_1" elementId="audio1" url="assets/audio/a5s1_1.mp3" />                  
                     <nodeaudio id="audio-a5s1_2" elementId="audio2" url="assets/audio/a5s1_2.mp3" />                  
                     <nodeaudio id="audio-a5s1_3" elementId="audio3" url="assets/audio/a5s1_3.mp3" />                  
                     <nodeaudio id="audio-a5s1_4" elementId="audio4" url="assets/audio/a5s1_4.mp3" />                  
                     <nodeaudio id="audio-a5s1_5" elementId="audio5" url="assets/audio/a5s1_5.mp3" />                  
                     <nodeaudio id="audio-a5s1_6" elementId="audio6" url="assets/audio/a5s1_6.mp3" />                  
                     <nodeaudio id="audio-a5s1_7" elementId="audio7" url="assets/audio/a5s1_7.mp3" />                  
                    </nodeaudios>
                  <content><![CDATA[
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<base href="http://uccpdev.berkeley.edu/uccp-assets/" />

<link rel="stylesheet" href="css/UCCP.css" />


<title>Proof of Concept 2</title>
</head>

<body>

<div class="header" id="audio1">Section Summary</div>

<div id="marginCol">
	 <div class="warning top50">
		<p id="audio7">Heads up!</p>
        <p id="audio8"> The Unit quiz will occur three Sections ahead. </p>
        <p id="audio9">Best way to get ready? Work through all the details of your <i>Virtual Pet</i> project!</p>
     </div>
	    
    <div class="help top50">
		<a href="page/glossary.php?term=helper%20method" target="_blank">helper method</a>
	</div>
    
   
</div>

<div id="mainCol">

<table id="summaryTable">
	<tr>
	         <th><p id="audio2">Today, you got a first look at the virtual pet project, examining code from the constructor Cam. </p></th>
             <td><img src="art/pets/male1/pet_ecstatic_3.jpg" alt="Pet Happy" width="70px"></td>
     </tr>
     <tr>
     	    <th><p id="audio3">You added code to test how hungry a pet was, and looked at different possible solutions.</p></th>
			 <td><img src="art/pets/male1/pet_hungry_2.jpg" alt="Pet Hungry" width="70px"></td>
     </tr>
     <tr>
     		<th><p id="audio4">You also debugged Cam's code to add "tiredness" to her solution, making her pet more interesting.</p></th>
        	<td><img src="art/pets/male1/pet_tired_2.jpg" alt="Pet Tired" width="70px"></td>
     </tr>
</table>

<p class="center" id="audio5">In just this short time, the code we ended up with got somewhat complicated.<br> 
Next time, we'll start looking into how to use <span class="vocab">helper methods</span> 
to make the <tt>VirtualPet</tt> class much more manageable.  
After that, we'll consider ways to do careful testing that will allow you to add changes without introducing new bugs."
Eventually, you'll spend a few days with free rein to make your own virtual pet toy.  The crazier you can make it the better! It's for kids to play with, after all.  </p>

<div class="redFlag" id="audio6">Bug hunting -- here we come!</div>

<div class="center">
<img src="art/robots/cam_bugswat.png" width="160px" />
</div>

</div>

</body>
</html>
                  ]]></content>
                </OTIntroPage>
              </stepList>
            </OTPasActivity>            
          </activityList>
        </OTPasProject>
      </root>
      <library>
        <OTCompoundDoc name="top-menu" showEditBar="false">
          <bodyText>
            <div class="top-menu">
              <table>
                <tr>
                  <td>
                    <object refid="${[no menu in author mode]}" viewid="textsize-choice-view" />
                  </td>
                </tr>
              </table>
            </div>
          </bodyText>
        </OTCompoundDoc>
      </library>
    </OTSystem>
  </objects>
</otrunk>

